# Makefile.in generated by automake 1.11.1 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Copyright 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009
# Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.






pkgdatadir = $(datadir)/smalltalk
pkgincludedir = $(includedir)/smalltalk
pkglibdir = $(libdir)/smalltalk
pkglibexecdir = $(libexecdir)/smalltalk
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
#am__append_1 = opcode
bin_PROGRAMS = gst$(EXEEXT)
#am__append_2 = opcode/libdisass.la
#am__append_3 = opcode/libdisass.la
#am__append_4 = -I$(top_srcdir)/opcode
noinst_PROGRAMS = gst-tool$(EXEEXT)
EXTRA_PROGRAMS = winewrapper$(EXEEXT)
subdir = .
DIST_COMMON = README $(am__configure_deps) $(am__dist_lisp_LISP_DIST) \
	$(dist_aclocal_DATA) $(dist_noinst_DATA) \
	$(dist_noinst_SCRIPTS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/config.h.in \
	$(srcdir)/gnu-smalltalk.pc.in $(srcdir)/gst-config.in \
	$(srcdir)/libc.la.in $(srcdir)/makesetup.in \
	$(top_srcdir)/configure \
	$(top_srcdir)/packages/blox/tests/package.xml.in AUTHORS \
	COPYING COPYING.DOC COPYING.LIB ChangeLog INSTALL NEWS THANKS \
	TODO build-aux/compile build-aux/config.guess \
	build-aux/config.rpath build-aux/config.sub build-aux/depcomp \
	build-aux/elisp-comp build-aux/install-sh build-aux/ltmain.sh \
	build-aux/mdate-sh build-aux/missing build-aux/texinfo.tex \
	build-aux/ylwrap
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/build-aux/bold.m4 \
	$(top_srcdir)/build-aux/codeset.m4 \
	$(top_srcdir)/build-aux/emacs-pkg.m4 \
	$(top_srcdir)/build-aux/ext_goto.m4 \
	$(top_srcdir)/build-aux/gawk.m4 $(top_srcdir)/build-aux/gcc.m4 \
	$(top_srcdir)/build-aux/gl.m4 \
	$(top_srcdir)/build-aux/glib-2.0.m4 \
	$(top_srcdir)/build-aux/glut.m4 $(top_srcdir)/build-aux/gmp.m4 \
	$(top_srcdir)/build-aux/gst-package.m4 \
	$(top_srcdir)/build-aux/gtk-2.0.m4 \
	$(top_srcdir)/build-aux/iconv.m4 \
	$(top_srcdir)/build-aux/lib-ld.m4 \
	$(top_srcdir)/build-aux/lib-link.m4 \
	$(top_srcdir)/build-aux/lib-prefix.m4 \
	$(top_srcdir)/build-aux/lib.m4 \
	$(top_srcdir)/build-aux/libc-so-name.m4 \
	$(top_srcdir)/build-aux/lightning.m4 \
	$(top_srcdir)/build-aux/ln.m4 \
	$(top_srcdir)/build-aux/localtime.m4 \
	$(top_srcdir)/build-aux/lock.m4 \
	$(top_srcdir)/build-aux/long-double.m4 \
	$(top_srcdir)/build-aux/lrint.m4 \
	$(top_srcdir)/build-aux/ltdl-gst.m4 \
	$(top_srcdir)/build-aux/ltoptions.m4 \
	$(top_srcdir)/build-aux/ltsugar.m4 \
	$(top_srcdir)/build-aux/ltversion.m4 \
	$(top_srcdir)/build-aux/lt~obsolete.m4 \
	$(top_srcdir)/build-aux/modules.m4 \
	$(top_srcdir)/build-aux/pkg.m4 $(top_srcdir)/build-aux/poll.m4 \
	$(top_srcdir)/build-aux/readline.m4 \
	$(top_srcdir)/build-aux/relocatable.m4 \
	$(top_srcdir)/build-aux/setenv.m4 \
	$(top_srcdir)/build-aux/snprintfv.m4 \
	$(top_srcdir)/build-aux/sockets.m4 \
	$(top_srcdir)/build-aux/sockpfaf.m4 \
	$(top_srcdir)/build-aux/strtoul.m4 \
	$(top_srcdir)/build-aux/sync-builtins.m4 \
	$(top_srcdir)/build-aux/tcltk.m4 \
	$(top_srcdir)/build-aux/version.m4 \
	$(top_srcdir)/build-aux/vis-hidden.m4 \
	$(top_srcdir)/build-aux/wine.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES = makesetup packages/blox/tests/package.xml \
	gnu-smalltalk.pc gst-config libc.la
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(lispdir)" "$(DESTDIR)$(lispdir)" \
	"$(DESTDIR)$(lispstartdir)" "$(DESTDIR)$(aclocaldir)" \
	"$(DESTDIR)$(moduledir)" "$(DESTDIR)$(pkgconfigdir)"
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am_gst_OBJECTS = main.$(OBJEXT)
gst_OBJECTS = $(am_gst_OBJECTS)
gst_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(gst_LDFLAGS) \
	$(LDFLAGS) -o $@
am_gst_tool_OBJECTS = gst-tool.$(OBJEXT)
gst_tool_OBJECTS = $(am_gst_tool_OBJECTS)
gst_tool_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(gst_tool_LDFLAGS) \
	$(LDFLAGS) -o $@
am_winewrapper_OBJECTS = winewrapper.$(OBJEXT)
winewrapper_OBJECTS = $(am_winewrapper_OBJECTS)
winewrapper_LDADD = $(LDADD)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
SCRIPTS = $(bin_SCRIPTS) $(dist_noinst_SCRIPTS)
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(gst_SOURCES) $(gst_tool_SOURCES) $(winewrapper_SOURCES)
DIST_SOURCES = $(gst_SOURCES) $(gst_tool_SOURCES) \
	$(winewrapper_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
am__dist_lisp_LISP_DIST = smalltalk-mode.el
dist_lispLISP_INSTALL = $(INSTALL_DATA)
nodist_lispLISP_INSTALL = $(INSTALL_DATA)
nodist_lispstartLISP_INSTALL = $(INSTALL_DATA)
LISP = $(dist_lisp_LISP) $(nodist_lisp_LISP) $(nodist_lispstart_LISP)
am__ELFILES = gst-mode.el smalltalk-mode-init.el smalltalk-mode.el
am__ELCFILES = $(am__ELFILES:.el=.elc)
ELCFILES = $(LISP:.el=.elc)
elisp_comp = $(top_srcdir)/build-aux/elisp-comp
DATA = $(dist_aclocal_DATA) $(dist_noinst_DATA) $(module_DATA) \
	$(nodist_pkgconfig_DATA) $(noinst_DATA)
HEADERS = $(nodist_noinst_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \
	$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS \
	distdir dist dist-all distcheck
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  { test ! -d "$(distdir)" \
    || { find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr "$(distdir)"; }; }
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
distuninstallcheck_listfiles = find . -type f -print
distcleancheck_listfiles = find . -type f -print
ACLOCAL = ${SHELL} /home/vagrant/code/smalltalk-3.2/build-aux/missing --run aclocal-1.11
ALLOCA = 
ALL_PACKAGES =  packages/blox/tk packages/dbd-sqlite packages/gdbm packages/gtk packages/i18n packages/iconv packages/digest packages/opengl packages/glut packages/sdl/libsdl packages/vfs packages/xml/expat packages/zlib
AMTAR = ${SHELL} /home/vagrant/code/smalltalk-3.2/build-aux/missing --run tar
AR = ar
AS = as
ATK_CFLAGS = 
ATK_LIBS = 
AUTOCONF = ${SHELL} /home/vagrant/code/smalltalk-3.2/build-aux/missing --run autoconf
AUTOHEADER = ${SHELL} /home/vagrant/code/smalltalk-3.2/build-aux/missing --run autoheader
AUTOM4TE = ${SHELL} /home/vagrant/code/smalltalk-3.2/build-aux/missing --run autom4te
AUTOMAKE = ${SHELL} /home/vagrant/code/smalltalk-3.2/build-aux/missing --run automake-1.11
AWK = gawk
BLOX_IMPLEMENTATION = BloxTK
BUILT_PACKAGES =  packages/dbd-sqlite packages/i18n packages/iconv packages/digest packages/vfs packages/xml/expat packages/zlib
CAIRO_CFLAGS = 
CAIRO_LIBS = 
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -Wall -Wno-format -Wdeclaration-after-statement -Wno-format -Wpointer-arith -Wno-pointer-sign -Wno-switch -Wwrite-strings -Wno-strict-aliasing -fno-gcse -fstrict-aliasing 
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = dlltool
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EMACS = no
EMACSLOADPATH = 
EXEEXT = 
FFI_CFLAGS = 
FFI_LIBS = 
FGREP = /bin/grep -F
GLIB_CFLAGS = 
GLIB_GENMARSHAL = 
GLIB_LIBS = 
GLIB_MKENUMS = 
GOBJECT_QUERY = 
GPERF = ${SHELL} /home/vagrant/code/smalltalk-3.2/build-aux/missing --run gperf
GREP = /bin/grep
GST_RUN = $(top_builddir)/gst -I $(top_builddir)/gst.im -f
GTHREAD_CFLAGS = 
GTHREAD_LIBS = 
GTK_CFLAGS = 
GTK_LIBS = 
ICON = 
INCFFI = -I$(top_srcdir)/libffi/include -I$(top_builddir)/libffi/include
INCLTDL = 
INCSIGSEGV = -I$(top_srcdir)/sigsegv/src -I$(top_builddir)/sigsegv/src
INCSNPRINTFV = -I${top_builddir}/snprintfv -I${top_srcdir}/snprintfv
INCTCLTK = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_INFO = /usr/bin/install-info
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LEX = ${SHELL} /home/vagrant/code/smalltalk-3.2/build-aux/missing --run flex
LIBADD_DL = -ldl
LIBC_SO_DIR = 
LIBC_SO_NAME = 
LIBFFI = $(top_builddir)/libffi/libffi.la
LIBGLUT = 
LIBGMP = 
LIBGST_CFLAGS = 
LIBICONV = 
LIBLTDL = 
LIBOBJS =  ${LIBOBJDIR}ltdl$U.o
LIBOPENGL = 
LIBREADLINE = -lreadline 
LIBS = -lm 
LIBSIGSEGV = $(top_builddir)/sigsegv/src/libsigsegv.la
LIBSNPRINTFV = ${top_builddir}/snprintfv/snprintfv/libsnprintfvc.la
LIBTCLTK = 
LIBTHREAD = -lpthread
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN = cp -p
LN_S = cp -p
LTALLOCA = 
LTLIBICONV = 
LTLIBOBJS =  ${LIBOBJDIR}ltdl$U.lo
MAINTAINER = bonzini@gnu.org
MAKEINFO = ${SHELL} /home/vagrant/code/smalltalk-3.2/build-aux/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
MODULES = 
NM = /usr/bin/nm -B
NMEDIT = 
OBJC = gcc
OBJCDEPMODE = depmode=gcc3
OBJCFLAGS = -g -O2 -Wall -Wno-format -Wdeclaration-after-statement -Wno-format -Wpointer-arith -Wno-pointer-sign -Wno-switch -Wwrite-strings -Wno-strict-aliasing -fno-gcse -fstrict-aliasing 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = smalltalk
PACKAGE_BUGREPORT = help-smalltalk@gnu.org
PACKAGE_DLOPEN_FLAGS =  -dlopen "${abs_top_builddir}/packages/dbd-sqlite/dbd-sqlite3.la" -dlopen "${abs_top_builddir}/packages/i18n/i18n.la" -dlopen "${abs_top_builddir}/packages/iconv/iconv.la" -dlopen "${abs_top_builddir}/packages/digest/digest.la" -dlopen "${abs_top_builddir}/packages/xml/expat/expat.la" -dlopen "${abs_top_builddir}/packages/zlib/zlib.la"
PACKAGE_NAME = GNU Smalltalk
PACKAGE_STRING = GNU Smalltalk 3.2
PACKAGE_TARNAME = smalltalk
PACKAGE_URL = http://smalltalk.gnu.org/
PACKAGE_VERSION = 3.2
PANGO_CFLAGS = 
PANGO_LIBS = 
PATH_SEPARATOR = :
PKG_CONFIG = no
RANLIB = ranlib
RELOCATABLE = yes
RELOC_CPPFLAGS =  \
	-DDEFAULT_EXECUTABLE=\""${bindir}/gst${EXEEXT}"\"
RELOC_LDFLAGS = -Wl,-rpath,"\$$ORIGIN/../lib"
SDL_CFLAGS = 
SDL_LIBS =   
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
SOCKET_LIBS = 
STRIP = strip
TCLSH = no
VERSION = 3.2
VERSION_INFO = 7:2:0
WINDRES = no
WINEWRAPPER = 
WINEWRAPPERDEP = 
XMKMF = 
XZIP = /usr/bin/zip
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS = 
YACC = ${SHELL} /home/vagrant/code/smalltalk-3.2/build-aux/missing --run bison
ZIP = /usr/bin/zip
abs_builddir = /home/vagrant/code/smalltalk-3.2
abs_srcdir = /home/vagrant/code/smalltalk-3.2
abs_top_builddir = /home/vagrant/code/smalltalk-3.2
abs_top_srcdir = /home/vagrant/code/smalltalk-3.2
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
enable_mysql_tests = no
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
imagedir = ${localstatedir}/lib/smalltalk
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/vagrant/code/smalltalk-3.2/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
lispdir = ${datadir}/emacs/site-lisp
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
moduledir = ${pkglibdir}
moduleexecdir = ${moduledir}
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
subdirs =  libffi snprintfv sigsegv
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = 
top_builddir = .
top_srcdir = .

# Automake requirements
AUTOMAKE_OPTIONS = gnu 1.8
ACLOCAL_AMFLAGS = -I build-aux
gstdatadir = $(pkgdatadir)
DIST_SUBDIRS = lib-src snprintfv lightning sigsegv libffi opcode libgst \
	. $(ALL_PACKAGES) tests doc

SUBDIRS = lib-src lightning $(subdirs) $(am__append_1) libgst . \
	$(BUILT_PACKAGES) doc tests

# Running gst inside the build directory...
GST_OPTS = --kernel-dir "./kernel" --image gst.im
GST = $(WINEWRAPPER) ./gst$(EXEEXT) --no-user-files $(GST_OPTS)
GST_PACKAGE = XZIP="$(XZIP)" $(WINEWRAPPER) ./gst-tool$(EXEEXT) gst-package $(GST_OPTS)

###########################################################
#
#        Rules for configuration files
#
###########################################################
aclocaldir = $(datadir)/aclocal
dist_aclocal_DATA = build-aux/gst.m4 build-aux/gst-package.m4

###########################################################
#
#        Rules for distributing the superops program
#
###########################################################
dist_noinst_DATA = Doxyfile smalltalk-mode-init.el.in gst-mode.el.in \
	.gdbinit scripts/Finish.st gsticon.ico packages/xml/ChangeLog \
	packages/seaside/PORTING superops/ChangeLog superops/Makefile \
	superops/README superops/bool-array.cc superops/bool-array.h \
	superops/bool-array.icc superops/byte_def.cc \
	superops/byte_def.h superops/hash-table.cc \
	superops/hash-table.h superops/hash.cc superops/hash.h \
	superops/keyword-list.cc superops/keyword-list.h \
	superops/keyword-list.icc superops/keyword.cc \
	superops/keyword.h superops/keyword.icc \
	superops/observer-list.cc superops/observer-list.h \
	superops/options.cc superops/options.h superops/options.icc \
	superops/positions.cc superops/positions.h \
	superops/positions.icc superops/search.cc superops/search.h \
	superops/superops.cc superops/table.cc superops/table.h \
	superops/vm_def.cc superops/vm_def.h
dist_noinst_SCRIPTS = build-aux/texi2dvi build-aux/texi2html \
	build-aux/help2man build-aux/config.rpath 


###########################################################
#
#        Rules for scripts and data files
#
###########################################################
pkgconfigdir = $(libdir)/pkgconfig
nodist_pkgconfig_DATA = gnu-smalltalk.pc
module_DATA = libc.la
noinst_DATA = gst.im
bin_SCRIPTS = gst-config
DISTCLEANFILES = termbold termnorm pkgrules.tmp config.h
CLEANFILES = gst.im $(nodist_lisp_LISP) $(nodist_lispstart_LISP)
lispstartdir = $(lispdir)/site-start.d
#dist_lisp_LISP = smalltalk-mode.el
#nodist_lispstart_LISP = smalltalk-mode-init.el
##nodist_lisp_LISP = gst-mode.el
LISP_WITH_EMACS_COMINT = ;
#LISP_WITH_EMACS_COMINT = 

###########################################################
#
#        Rules for building the VM
#
###########################################################
AM_CPPFLAGS = -I$(top_srcdir)/libgst -I$(top_srcdir)/lib-src \
	-DCMD_XZIP="\"$(XZIP)\"" -DCMD_INSTALL="\"$(INSTALL)\"" \
	-DCMD_LN_S="\"$(LN_S)\"" $(RELOC_CPPFLAGS) $(am__append_4)
gst_SOURCES = main.c
gst_LDADD = libgst/libgst.la lib-src/library.la  $(am__append_2)
gst_DEPENDENCIES = libgst/libgst.la lib-src/library.la  \
	$(am__append_3)
gst_LDFLAGS = -export-dynamic $(RELOC_LDFLAGS)
gst_tool_SOURCES = gst-tool.c
gst_tool_LDADD = libgst/libgst.la lib-src/library.la 
gst_tool_DEPENDENCIES = libgst/libgst.la lib-src/library.la 
gst_tool_LDFLAGS = -export-dynamic $(RELOC_LDFLAGS)
winewrapper_SOURCES = winewrapper.c
GST_EXTRA_TOOLS = gst-reload gst-sunit gst-blox gst-package gst-convert \
	gst-doc gst-remote gst-profile gst-browser

nodist_noinst_HEADERS = config.h
all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
am--refresh:
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --gnu'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --gnu \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) $(AM_MAKEFLAGS) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
makesetup: $(top_builddir)/config.status $(srcdir)/makesetup.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
packages/blox/tests/package.xml: $(top_builddir)/config.status $(top_srcdir)/packages/blox/tests/package.xml.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
gnu-smalltalk.pc: $(top_builddir)/config.status $(srcdir)/gnu-smalltalk.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
gst-config: $(top_builddir)/config.status $(srcdir)/gst-config.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
libc.la: $(top_builddir)/config.status $(srcdir)/libc.la.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
gst$(EXEEXT): $(gst_OBJECTS) $(gst_DEPENDENCIES) 
	@rm -f gst$(EXEEXT)
	$(gst_LINK) $(gst_OBJECTS) $(gst_LDADD) $(LIBS)
gst-tool$(EXEEXT): $(gst_tool_OBJECTS) $(gst_tool_DEPENDENCIES) 
	@rm -f gst-tool$(EXEEXT)
	$(gst_tool_LINK) $(gst_tool_OBJECTS) $(gst_tool_LDADD) $(LIBS)
winewrapper$(EXEEXT): $(winewrapper_OBJECTS) $(winewrapper_DEPENDENCIES) 
	@rm -f winewrapper$(EXEEXT)
	$(LINK) $(winewrapper_OBJECTS) $(winewrapper_LDADD) $(LIBS)
install-binSCRIPTS: $(bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_SCRIPTS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_SCRIPTS)'; test -n "$(bindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/gst-tool.Po
include ./$(DEPDIR)/main.Po
include ./$(DEPDIR)/winewrapper.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool config.lt

elc-stamp: $(LISP)
	@echo 'WARNING: Warnings can be ignored. :-)'
	@rm -f elc-temp && touch elc-temp
	if test "$(EMACS)" != no; then \
	  set x; \
	  list='$(LISP)'; for p in $$list; do \
	    if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	    set x "$$@" "$$d$$p"; shift; \
	  done; \
	  shift; \
	  EMACS="$(EMACS)" $(SHELL) $(elisp_comp) "$$@" || exit 1; \
	else : ; fi
	@mv -f elc-temp $@
$(am__ELCFILES): elc-stamp
	@if test "$(EMACS)" != no && test ! -f $@; then \
	  trap 'rm -rf elc-lock elc-stamp' 1 2 13 15; \
	  if mkdir elc-lock 2>/dev/null; then \
	    rm -f elc-stamp; \
	    $(MAKE) $(AM_MAKEFLAGS) elc-stamp; \
	    rmdir elc-lock; \
	  else \
	    while test -d elc-lock; do sleep 1; done; \
	    test -f elc-stamp; exit $$?; \
	  fi; \
	else : ; fi
install-dist_lispLISP: $(dist_lisp_LISP) $(ELCFILES)
	@$(NORMAL_INSTALL)
	@if test "$(EMACS)" != no && test -n "$(lispdir)"; then \
	  $(MKDIR_P) "$(DESTDIR)$(lispdir)"; \
	  list='$(dist_lisp_LISP)'; for p in $$list; do \
	    if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	    $(am__strip_dir) \
	    echo " $(dist_lispLISP_INSTALL) '$$d$$p' '$(DESTDIR)$(lispdir)/$$f'"; \
	    $(dist_lispLISP_INSTALL) "$$d$$p" "$(DESTDIR)$(lispdir)/$$f" || exit $$?; \
	    if test -f $${p}c; then \
	      echo " $(dist_lispLISP_INSTALL) '$${p}c' '$(DESTDIR)$(lispdir)/$${f}c'"; \
	      $(dist_lispLISP_INSTALL) "$${p}c" "$(DESTDIR)$(lispdir)/$${f}c" || exit $$?; \
	    else : ; fi; \
	  done; \
	else : ; fi

uninstall-dist_lispLISP:
	@$(NORMAL_UNINSTALL)
	@test "$(EMACS)" != no && test -n "$(lispdir)" || exit 0; \
	list='$(dist_lisp_LISP)'; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	filesc=`echo "$$files" | sed 's|$$|c|'`; \
	echo " ( cd '$(DESTDIR)$(lispdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(lispdir)" && rm -f $$files || exit $$?; \
	echo " ( cd '$(DESTDIR)$(lispdir)' && rm -f" $$filesc ")"; \
	cd "$(DESTDIR)$(lispdir)" && rm -f $$filesc

clean-lisp:
	-rm -f elc-stamp $(ELCFILES)
install-nodist_lispLISP: $(nodist_lisp_LISP) $(ELCFILES)
	@$(NORMAL_INSTALL)
	@if test "$(EMACS)" != no && test -n "$(lispdir)"; then \
	  $(MKDIR_P) "$(DESTDIR)$(lispdir)"; \
	  list='$(nodist_lisp_LISP)'; for p in $$list; do \
	    if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	    $(am__strip_dir) \
	    echo " $(nodist_lispLISP_INSTALL) '$$d$$p' '$(DESTDIR)$(lispdir)/$$f'"; \
	    $(nodist_lispLISP_INSTALL) "$$d$$p" "$(DESTDIR)$(lispdir)/$$f" || exit $$?; \
	    if test -f $${p}c; then \
	      echo " $(nodist_lispLISP_INSTALL) '$${p}c' '$(DESTDIR)$(lispdir)/$${f}c'"; \
	      $(nodist_lispLISP_INSTALL) "$${p}c" "$(DESTDIR)$(lispdir)/$${f}c" || exit $$?; \
	    else : ; fi; \
	  done; \
	else : ; fi

uninstall-nodist_lispLISP:
	@$(NORMAL_UNINSTALL)
	@test "$(EMACS)" != no && test -n "$(lispdir)" || exit 0; \
	list='$(nodist_lisp_LISP)'; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	filesc=`echo "$$files" | sed 's|$$|c|'`; \
	echo " ( cd '$(DESTDIR)$(lispdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(lispdir)" && rm -f $$files || exit $$?; \
	echo " ( cd '$(DESTDIR)$(lispdir)' && rm -f" $$filesc ")"; \
	cd "$(DESTDIR)$(lispdir)" && rm -f $$filesc
install-nodist_lispstartLISP: $(nodist_lispstart_LISP) $(ELCFILES)
	@$(NORMAL_INSTALL)
	@if test "$(EMACS)" != no && test -n "$(lispstartdir)"; then \
	  $(MKDIR_P) "$(DESTDIR)$(lispstartdir)"; \
	  list='$(nodist_lispstart_LISP)'; for p in $$list; do \
	    if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	    $(am__strip_dir) \
	    echo " $(nodist_lispstartLISP_INSTALL) '$$d$$p' '$(DESTDIR)$(lispstartdir)/$$f'"; \
	    $(nodist_lispstartLISP_INSTALL) "$$d$$p" "$(DESTDIR)$(lispstartdir)/$$f" || exit $$?; \
	    if test -f $${p}c; then \
	      echo " $(nodist_lispstartLISP_INSTALL) '$${p}c' '$(DESTDIR)$(lispstartdir)/$${f}c'"; \
	      $(nodist_lispstartLISP_INSTALL) "$${p}c" "$(DESTDIR)$(lispstartdir)/$${f}c" || exit $$?; \
	    else : ; fi; \
	  done; \
	else : ; fi

uninstall-nodist_lispstartLISP:
	@$(NORMAL_UNINSTALL)
	@test "$(EMACS)" != no && test -n "$(lispstartdir)" || exit 0; \
	list='$(nodist_lispstart_LISP)'; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	filesc=`echo "$$files" | sed 's|$$|c|'`; \
	echo " ( cd '$(DESTDIR)$(lispstartdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(lispstartdir)" && rm -f $$files || exit $$?; \
	echo " ( cd '$(DESTDIR)$(lispstartdir)' && rm -f" $$filesc ")"; \
	cd "$(DESTDIR)$(lispstartdir)" && rm -f $$filesc
install-dist_aclocalDATA: $(dist_aclocal_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(aclocaldir)" || $(MKDIR_P) "$(DESTDIR)$(aclocaldir)"
	@list='$(dist_aclocal_DATA)'; test -n "$(aclocaldir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(aclocaldir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(aclocaldir)" || exit $$?; \
	done

uninstall-dist_aclocalDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_aclocal_DATA)'; test -n "$(aclocaldir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(aclocaldir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(aclocaldir)" && rm -f $$files
install-moduleDATA: $(module_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(moduledir)" || $(MKDIR_P) "$(DESTDIR)$(moduledir)"
	@list='$(module_DATA)'; test -n "$(moduledir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(moduledir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(moduledir)" || exit $$?; \
	done

uninstall-moduleDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(module_DATA)'; test -n "$(moduledir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(moduledir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(moduledir)" && rm -f $$files
install-nodist_pkgconfigDATA: $(nodist_pkgconfig_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(pkgconfigdir)" || $(MKDIR_P) "$(DESTDIR)$(pkgconfigdir)"
	@list='$(nodist_pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgconfigdir)" || exit $$?; \
	done

uninstall-nodist_pkgconfigDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(pkgconfigdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(pkgconfigdir)" && rm -f $$files

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

dist-lzma: distdir
	tardir=$(distdir) && $(am__tar) | lzma -9 -c >$(distdir).tar.lzma
	$(am__remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | xz -c >$(distdir).tar.xz
	$(am__remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__remove_distdir)

dist dist-all: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lzma*) \
	  lzma -dc $(distdir).tar.lzma | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir); chmod a+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@$(am__cd) '$(distuninstallcheck_dir)' \
	&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS) $(SCRIPTS) $(LISP) $(ELCFILES) $(DATA) \
		$(HEADERS) config.h all-local
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(lispdir)" "$(DESTDIR)$(lispdir)" "$(DESTDIR)$(lispstartdir)" "$(DESTDIR)$(aclocaldir)" "$(DESTDIR)$(moduledir)" "$(DESTDIR)$(pkgconfigdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-libtool clean-lisp \
	clean-local clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-dist_aclocalDATA install-dist_lispLISP \
	install-moduleDATA install-nodist_lispLISP \
	install-nodist_lispstartLISP install-nodist_pkgconfigDATA
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-data-hook
install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS install-binSCRIPTS
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-hook
install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-binSCRIPTS \
	uninstall-dist_aclocalDATA uninstall-dist_lispLISP \
	uninstall-local uninstall-moduleDATA uninstall-nodist_lispLISP \
	uninstall-nodist_lispstartLISP uninstall-nodist_pkgconfigDATA

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) all \
	ctags-recursive install-am install-data-am install-exec-am \
	install-strip tags-recursive

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am all-local am--refresh check check-am clean \
	clean-binPROGRAMS clean-generic clean-libtool clean-lisp \
	clean-local clean-noinstPROGRAMS ctags ctags-recursive dist \
	dist-all dist-bzip2 dist-gzip dist-hook dist-lzma dist-shar \
	dist-tarZ dist-xz dist-zip distcheck distclean \
	distclean-compile distclean-generic distclean-hdr \
	distclean-libtool distclean-tags distcleancheck distdir \
	distuninstallcheck dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-binSCRIPTS \
	install-data install-data-am install-data-hook \
	install-dist_aclocalDATA install-dist_lispLISP install-dvi \
	install-dvi-am install-exec install-exec-am install-exec-hook \
	install-html install-html-am install-info install-info-am \
	install-man install-moduleDATA install-nodist_lispLISP \
	install-nodist_lispstartLISP install-nodist_pkgconfigDATA \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags tags-recursive \
	uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-binSCRIPTS uninstall-dist_aclocalDATA \
	uninstall-dist_lispLISP uninstall-local uninstall-moduleDATA \
	uninstall-nodist_lispLISP uninstall-nodist_lispstartLISP \
	uninstall-nodist_pkgconfigDATA


smalltalk-mode-init.el: smalltalk-mode-init.el.in
	$(SED) -e "s,@\(lispdir\)@,$(lispdir)," \
	  -e "s/@\(WITH_EMACS_COMINT_TRUE\)@/$(LISP_WITH_EMACS_COMINT)/" \
	  $(srcdir)/smalltalk-mode-init.el.in > smalltalk-mode-init.el

gst-mode.el: gst-mode.el.in
	$(SED) -e "s,@\(bindir\)@,$(bindir)," $(srcdir)/gst-mode.el.in \
	  > gst-mode.el

uninstall-local::
	@for i in gst-load $(GST_EXTRA_TOOLS); do \
	  echo rm -f "$(DESTDIR)$(bindir)/$$i$(EXEEXT)"; \
	  rm -f "$(DESTDIR)$(bindir)/$$i$(EXEEXT)"; \
	done

install-exec-hook::
	$(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(INSTALL) gst-tool$(EXEEXT) "$(DESTDIR)$(bindir)/gst-load$(EXEEXT)"
	@for i in $(GST_EXTRA_TOOLS); do \
	  echo $(LN) -f "$(DESTDIR)$(bindir)/gst-load$(EXEEXT)" "$(DESTDIR)$(bindir)/$$i$(EXEEXT)"; \
	  $(LN) -f "$(DESTDIR)$(bindir)/gst-load$(EXEEXT)" "$(DESTDIR)$(bindir)/$$i$(EXEEXT)"; \
	done

# These two lines add a beatiful icon to the Win32 executable
gsticon.o: gsticon.ico
	cd $(srcdir) && echo ProgramIcon ICON `$(CYGPATH_W) gsticon.ico` | \
		$(WINDRES) -o $(abs_builddir)/gsticon.o

gst.im: $(bin_PROGRAMS) $(srcdir)/kernel/stamp-classes $(WINEWRAPPERDEP)
	$(GST) -iQ /dev/null

###########################################################
#
#        Rules for installing and distributing
#
#	 More rules are created by the GST_PACKAGE macros,
#	 including the stamp files used for building the
#	 documentation.  Here we mimic those rules for the
#	 kernel, whose file list lives in packages.xml
#
###########################################################

-include $(srcdir)/kernel/Makefile.frag
all-local: $(srcdir)/kernel/stamp-classes

# The slow rule for building the stamp-classes files uses gst-package, and
# depends on packages.xml in order to run when the list of files in the
# package might have changed.  The fast rule just touches the file.  We
# could actually do without double-colon rules by using another stamp file
# which depends on packages.xml and rebuilds all the stamp-classes files.

$(srcdir)/kernel/Makefile.frag: $(srcdir)/packages.xml $(WINEWRAPPERDEP)
	(echo '$$(srcdir)/kernel/stamp-classes: \'; \
	  $(GST_PACKAGE) --list-files Kernel --vpath --srcdir="$(srcdir)" $(srcdir)/packages.xml | \
	    tr -d \\r | tr \\n ' '; \
	echo; \
	echo '	touch $$(srcdir)/kernel/stamp-classes') \
	  > $(srcdir)/kernel/Makefile.frag

all-local:
clean-local::

dist-hook::
	$(GST_PACKAGE) --dist \
	  --distdir="$(distdir)" --srcdir="$(srcdir)" \
	  $(srcdir)/packages.xml
	cp -p $(srcdir)/kernel/stamp-classes $(distdir)/kernel/stamp-classes
	cp -p $(srcdir)/kernel/Makefile.frag $(distdir)/kernel/Makefile.frag

# Build an image after installing the data; install-data runs after
# install-exec, so the gst executable is already in bindir.
# To install the kernel files, we use gst-package in --dist mode.
install-data-hook::
	$(GST_PACKAGE) --dist --copy --all-files \
	  --destdir "$(DESTDIR)" --target-dir="$(pkgdatadir)" \
	  --srcdir "$(srcdir)" $(srcdir)/packages.xml
	$(mkdir_p) $(DESTDIR)$(imagedir)
	cd $(DESTDIR)$(imagedir) && \
	  $(WINEWRAPPER) "$(abs_top_builddir)/gst$(EXEEXT)" --no-user-files -iS \
	    --kernel-dir "$(DESTDIR)$(pkgdatadir)/kernel" \
	    --image "$(DESTDIR)$(imagedir)/gst.im" \
	    -f "/home/vagrant/code/smalltalk-3.2/scripts/Finish.st" \
	    "$(imagedir)" $(MODULES)

uninstall-local:: gst-tool$(EXEEXT)
	$(WINEWRAPPER) $(GST_PACKAGE) \
	  --uninstall --destdir "$(DESTDIR)" --target-dir "$(pkgdatadir)" \
	  --srcdir $(srcdir) $(DESTDIR)$(pkgdatadir)/packages.xml
	-rm -f $(DESTDIR)$(imagedir)/gst.im

all-local: $(srcdir)/packages/blox/tk/stamp-classes
BloxTK.star: packages/blox/tk/package.xml $(srcdir)/packages/blox/tk/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	cd packages/blox/tk && $(MAKE)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f BloxTK.star

dist-hook:: packages/blox/tk/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/blox/tk --dist $<

dist-hook:: $(srcdir)/packages/blox/tk/stamp-classes $(srcdir)/packages/blox/tk/Makefile.frag
	cp -p $(srcdir)/packages/blox/tk/stamp-classes $(distdir)/packages/blox/tk/stamp-classes
	cp -p $(srcdir)/packages/blox/tk/Makefile.frag $(distdir)/packages/blox/tk/Makefile.frag

$(srcdir)/packages/blox/tk/Makefile.frag: packages/blox/tk/package.xml
	(echo 'BloxTK_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files BloxTK $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(BloxTK_FILES):'; \
	echo '$$(srcdir)/packages/blox/tk/stamp-classes: $$(BloxTK_FILES)'; \
	echo '	touch $$(srcdir)/packages/blox/tk/stamp-classes') > $(srcdir)/packages/blox/tk/Makefile.frag
all-local: $(srcdir)/packages/blox/browser/stamp-classes
BLOXBrowser.star: packages/blox/browser/package.xml $(srcdir)/packages/blox/browser/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f BLOXBrowser.star

dist-hook:: packages/blox/browser/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/blox/browser --dist $<

dist-hook:: $(srcdir)/packages/blox/browser/stamp-classes $(srcdir)/packages/blox/browser/Makefile.frag
	cp -p $(srcdir)/packages/blox/browser/stamp-classes $(distdir)/packages/blox/browser/stamp-classes
	cp -p $(srcdir)/packages/blox/browser/Makefile.frag $(distdir)/packages/blox/browser/Makefile.frag

$(srcdir)/packages/blox/browser/Makefile.frag: packages/blox/browser/package.xml
	(echo 'BLOXBrowser_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files BLOXBrowser $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(BLOXBrowser_FILES):'; \
	echo '$$(srcdir)/packages/blox/browser/stamp-classes: $$(BLOXBrowser_FILES)'; \
	echo '	touch $$(srcdir)/packages/blox/browser/stamp-classes') > $(srcdir)/packages/blox/browser/Makefile.frag
install-data-hook:: BLOXBrowser.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" BLOXBrowser.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/BLOXBrowser.star

-include $(srcdir)/packages/blox/browser/Makefile.frag
all-local: BLOXBrowser.star
all-local: $(srcdir)/packages/complex/stamp-classes
Complex.star: packages/complex/package.xml $(srcdir)/packages/complex/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f Complex.star

dist-hook:: packages/complex/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/complex --dist $<

dist-hook:: $(srcdir)/packages/complex/stamp-classes $(srcdir)/packages/complex/Makefile.frag
	cp -p $(srcdir)/packages/complex/stamp-classes $(distdir)/packages/complex/stamp-classes
	cp -p $(srcdir)/packages/complex/Makefile.frag $(distdir)/packages/complex/Makefile.frag

$(srcdir)/packages/complex/Makefile.frag: packages/complex/package.xml
	(echo 'Complex_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files Complex $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(Complex_FILES):'; \
	echo '$$(srcdir)/packages/complex/stamp-classes: $$(Complex_FILES)'; \
	echo '	touch $$(srcdir)/packages/complex/stamp-classes') > $(srcdir)/packages/complex/Makefile.frag
install-data-hook:: Complex.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" Complex.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/Complex.star

-include $(srcdir)/packages/complex/Makefile.frag
all-local: Complex.star
all-local: $(srcdir)/packages/continuations/stamp-classes
Continuations.star: packages/continuations/package.xml $(srcdir)/packages/continuations/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f Continuations.star

dist-hook:: packages/continuations/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/continuations --dist $<

dist-hook:: $(srcdir)/packages/continuations/stamp-classes $(srcdir)/packages/continuations/Makefile.frag
	cp -p $(srcdir)/packages/continuations/stamp-classes $(distdir)/packages/continuations/stamp-classes
	cp -p $(srcdir)/packages/continuations/Makefile.frag $(distdir)/packages/continuations/Makefile.frag

$(srcdir)/packages/continuations/Makefile.frag: packages/continuations/package.xml
	(echo 'Continuations_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files Continuations $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(Continuations_FILES):'; \
	echo '$$(srcdir)/packages/continuations/stamp-classes: $$(Continuations_FILES)'; \
	echo '	touch $$(srcdir)/packages/continuations/stamp-classes') > $(srcdir)/packages/continuations/Makefile.frag
install-data-hook:: Continuations.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" Continuations.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/Continuations.star

-include $(srcdir)/packages/continuations/Makefile.frag
all-local: Continuations.star
all-local: $(srcdir)/packages/cpp/stamp-classes
CParser.star: packages/cpp/package.xml $(srcdir)/packages/cpp/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f CParser.star

dist-hook:: packages/cpp/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/cpp --dist $<

dist-hook:: $(srcdir)/packages/cpp/stamp-classes $(srcdir)/packages/cpp/Makefile.frag
	cp -p $(srcdir)/packages/cpp/stamp-classes $(distdir)/packages/cpp/stamp-classes
	cp -p $(srcdir)/packages/cpp/Makefile.frag $(distdir)/packages/cpp/Makefile.frag

$(srcdir)/packages/cpp/Makefile.frag: packages/cpp/package.xml
	(echo 'CParser_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files CParser $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(CParser_FILES):'; \
	echo '$$(srcdir)/packages/cpp/stamp-classes: $$(CParser_FILES)'; \
	echo '	touch $$(srcdir)/packages/cpp/stamp-classes') > $(srcdir)/packages/cpp/Makefile.frag
install-data-hook:: CParser.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" CParser.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/CParser.star

-include $(srcdir)/packages/cpp/Makefile.frag
all-local: CParser.star
all-local: $(srcdir)/packages/debug/stamp-classes
DebugTools.star: packages/debug/package.xml $(srcdir)/packages/debug/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f DebugTools.star

dist-hook:: packages/debug/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/debug --dist $<

dist-hook:: $(srcdir)/packages/debug/stamp-classes $(srcdir)/packages/debug/Makefile.frag
	cp -p $(srcdir)/packages/debug/stamp-classes $(distdir)/packages/debug/stamp-classes
	cp -p $(srcdir)/packages/debug/Makefile.frag $(distdir)/packages/debug/Makefile.frag

$(srcdir)/packages/debug/Makefile.frag: packages/debug/package.xml
	(echo 'DebugTools_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files DebugTools $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(DebugTools_FILES):'; \
	echo '$$(srcdir)/packages/debug/stamp-classes: $$(DebugTools_FILES)'; \
	echo '	touch $$(srcdir)/packages/debug/stamp-classes') > $(srcdir)/packages/debug/Makefile.frag
install-data-hook:: DebugTools.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" DebugTools.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/DebugTools.star

-include $(srcdir)/packages/debug/Makefile.frag
all-local: DebugTools.star
all-local: $(srcdir)/packages/dbd-mysql/stamp-classes
DBD-MySQL.star: packages/dbd-mysql/package.xml $(srcdir)/packages/dbd-mysql/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f DBD-MySQL.star

dist-hook:: packages/dbd-mysql/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/dbd-mysql --dist $<

dist-hook:: $(srcdir)/packages/dbd-mysql/stamp-classes $(srcdir)/packages/dbd-mysql/Makefile.frag
	cp -p $(srcdir)/packages/dbd-mysql/stamp-classes $(distdir)/packages/dbd-mysql/stamp-classes
	cp -p $(srcdir)/packages/dbd-mysql/Makefile.frag $(distdir)/packages/dbd-mysql/Makefile.frag

$(srcdir)/packages/dbd-mysql/Makefile.frag: packages/dbd-mysql/package.xml
	(echo 'DBD-MySQL_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files DBD-MySQL $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(DBD-MySQL_FILES):'; \
	echo '$$(srcdir)/packages/dbd-mysql/stamp-classes: $$(DBD-MySQL_FILES)'; \
	echo '	touch $$(srcdir)/packages/dbd-mysql/stamp-classes') > $(srcdir)/packages/dbd-mysql/Makefile.frag
install-data-hook:: DBD-MySQL.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" DBD-MySQL.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/DBD-MySQL.star

-include $(srcdir)/packages/dbd-mysql/Makefile.frag
all-local: DBD-MySQL.star
all-local: $(srcdir)/packages/dbd-postgresql/stamp-classes
DBD-PostgreSQL.star: packages/dbd-postgresql/package.xml $(srcdir)/packages/dbd-postgresql/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f DBD-PostgreSQL.star

dist-hook:: packages/dbd-postgresql/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/dbd-postgresql --dist $<

dist-hook:: $(srcdir)/packages/dbd-postgresql/stamp-classes $(srcdir)/packages/dbd-postgresql/Makefile.frag
	cp -p $(srcdir)/packages/dbd-postgresql/stamp-classes $(distdir)/packages/dbd-postgresql/stamp-classes
	cp -p $(srcdir)/packages/dbd-postgresql/Makefile.frag $(distdir)/packages/dbd-postgresql/Makefile.frag

$(srcdir)/packages/dbd-postgresql/Makefile.frag: packages/dbd-postgresql/package.xml
	(echo 'DBD-PostgreSQL_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files DBD-PostgreSQL $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(DBD-PostgreSQL_FILES):'; \
	echo '$$(srcdir)/packages/dbd-postgresql/stamp-classes: $$(DBD-PostgreSQL_FILES)'; \
	echo '	touch $$(srcdir)/packages/dbd-postgresql/stamp-classes') > $(srcdir)/packages/dbd-postgresql/Makefile.frag
install-data-hook:: DBD-PostgreSQL.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" DBD-PostgreSQL.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/DBD-PostgreSQL.star

-include $(srcdir)/packages/dbd-postgresql/Makefile.frag
all-local: DBD-PostgreSQL.star
all-local: $(srcdir)/packages/dbd-sqlite/stamp-classes
DBD-SQLite.star: packages/dbd-sqlite/package.xml $(srcdir)/packages/dbd-sqlite/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	cd packages/dbd-sqlite && $(MAKE)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f DBD-SQLite.star

dist-hook:: packages/dbd-sqlite/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/dbd-sqlite --dist $<

dist-hook:: $(srcdir)/packages/dbd-sqlite/stamp-classes $(srcdir)/packages/dbd-sqlite/Makefile.frag
	cp -p $(srcdir)/packages/dbd-sqlite/stamp-classes $(distdir)/packages/dbd-sqlite/stamp-classes
	cp -p $(srcdir)/packages/dbd-sqlite/Makefile.frag $(distdir)/packages/dbd-sqlite/Makefile.frag

$(srcdir)/packages/dbd-sqlite/Makefile.frag: packages/dbd-sqlite/package.xml
	(echo 'DBD-SQLite_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files DBD-SQLite $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(DBD-SQLite_FILES):'; \
	echo '$$(srcdir)/packages/dbd-sqlite/stamp-classes: $$(DBD-SQLite_FILES)'; \
	echo '	touch $$(srcdir)/packages/dbd-sqlite/stamp-classes') > $(srcdir)/packages/dbd-sqlite/Makefile.frag
install-data-hook:: DBD-SQLite.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" DBD-SQLite.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/DBD-SQLite.star

-include $(srcdir)/packages/dbd-sqlite/Makefile.frag
all-local: DBD-SQLite.star
all-local: $(srcdir)/packages/dbi/stamp-classes
DBI.star: packages/dbi/package.xml $(srcdir)/packages/dbi/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f DBI.star

dist-hook:: packages/dbi/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/dbi --dist $<

dist-hook:: $(srcdir)/packages/dbi/stamp-classes $(srcdir)/packages/dbi/Makefile.frag
	cp -p $(srcdir)/packages/dbi/stamp-classes $(distdir)/packages/dbi/stamp-classes
	cp -p $(srcdir)/packages/dbi/Makefile.frag $(distdir)/packages/dbi/Makefile.frag

$(srcdir)/packages/dbi/Makefile.frag: packages/dbi/package.xml
	(echo 'DBI_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files DBI $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(DBI_FILES):'; \
	echo '$$(srcdir)/packages/dbi/stamp-classes: $$(DBI_FILES)'; \
	echo '	touch $$(srcdir)/packages/dbi/stamp-classes') > $(srcdir)/packages/dbi/Makefile.frag
install-data-hook:: DBI.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" DBI.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/DBI.star

-include $(srcdir)/packages/dbi/Makefile.frag
all-local: DBI.star
all-local: $(srcdir)/packages/gdbm/stamp-classes
GDBM.star: packages/gdbm/package.xml $(srcdir)/packages/gdbm/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	cd packages/gdbm && $(MAKE)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f GDBM.star

dist-hook:: packages/gdbm/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/gdbm --dist $<

dist-hook:: $(srcdir)/packages/gdbm/stamp-classes $(srcdir)/packages/gdbm/Makefile.frag
	cp -p $(srcdir)/packages/gdbm/stamp-classes $(distdir)/packages/gdbm/stamp-classes
	cp -p $(srcdir)/packages/gdbm/Makefile.frag $(distdir)/packages/gdbm/Makefile.frag

$(srcdir)/packages/gdbm/Makefile.frag: packages/gdbm/package.xml
	(echo 'GDBM_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files GDBM $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(GDBM_FILES):'; \
	echo '$$(srcdir)/packages/gdbm/stamp-classes: $$(GDBM_FILES)'; \
	echo '	touch $$(srcdir)/packages/gdbm/stamp-classes') > $(srcdir)/packages/gdbm/Makefile.frag
all-local: $(srcdir)/packages/glorp/stamp-classes
Glorp.star: packages/glorp/package.xml $(srcdir)/packages/glorp/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f Glorp.star

dist-hook:: packages/glorp/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/glorp --dist $<

dist-hook:: $(srcdir)/packages/glorp/stamp-classes $(srcdir)/packages/glorp/Makefile.frag
	cp -p $(srcdir)/packages/glorp/stamp-classes $(distdir)/packages/glorp/stamp-classes
	cp -p $(srcdir)/packages/glorp/Makefile.frag $(distdir)/packages/glorp/Makefile.frag

$(srcdir)/packages/glorp/Makefile.frag: packages/glorp/package.xml
	(echo 'Glorp_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files Glorp $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(Glorp_FILES):'; \
	echo '$$(srcdir)/packages/glorp/stamp-classes: $$(Glorp_FILES)'; \
	echo '	touch $$(srcdir)/packages/glorp/stamp-classes') > $(srcdir)/packages/glorp/Makefile.frag
install-data-hook:: Glorp.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" Glorp.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/Glorp.star

-include $(srcdir)/packages/glorp/Makefile.frag
all-local: Glorp.star
all-local: $(srcdir)/packages/cairo/stamp-classes
Cairo.star: packages/cairo/package.xml $(srcdir)/packages/cairo/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f Cairo.star

dist-hook:: packages/cairo/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/cairo --dist $<

dist-hook:: $(srcdir)/packages/cairo/stamp-classes $(srcdir)/packages/cairo/Makefile.frag
	cp -p $(srcdir)/packages/cairo/stamp-classes $(distdir)/packages/cairo/stamp-classes
	cp -p $(srcdir)/packages/cairo/Makefile.frag $(distdir)/packages/cairo/Makefile.frag

$(srcdir)/packages/cairo/Makefile.frag: packages/cairo/package.xml
	(echo 'Cairo_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files Cairo $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(Cairo_FILES):'; \
	echo '$$(srcdir)/packages/cairo/stamp-classes: $$(Cairo_FILES)'; \
	echo '	touch $$(srcdir)/packages/cairo/stamp-classes') > $(srcdir)/packages/cairo/Makefile.frag
all-local: $(srcdir)/packages/gtk/stamp-classes
GTK.star: packages/gtk/package.xml $(srcdir)/packages/gtk/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	cd packages/gtk && $(MAKE)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f GTK.star

dist-hook:: packages/gtk/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/gtk --dist $<

dist-hook:: $(srcdir)/packages/gtk/stamp-classes $(srcdir)/packages/gtk/Makefile.frag
	cp -p $(srcdir)/packages/gtk/stamp-classes $(distdir)/packages/gtk/stamp-classes
	cp -p $(srcdir)/packages/gtk/Makefile.frag $(distdir)/packages/gtk/Makefile.frag

$(srcdir)/packages/gtk/Makefile.frag: packages/gtk/package.xml
	(echo 'GTK_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files GTK $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(GTK_FILES):'; \
	echo '$$(srcdir)/packages/gtk/stamp-classes: $$(GTK_FILES)'; \
	echo '	touch $$(srcdir)/packages/gtk/stamp-classes') > $(srcdir)/packages/gtk/Makefile.frag
all-local: $(srcdir)/packages/blox/gtk/stamp-classes
BloxGTK.star: packages/blox/gtk/package.xml $(srcdir)/packages/blox/gtk/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f BloxGTK.star

dist-hook:: packages/blox/gtk/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/blox/gtk --dist $<

dist-hook:: $(srcdir)/packages/blox/gtk/stamp-classes $(srcdir)/packages/blox/gtk/Makefile.frag
	cp -p $(srcdir)/packages/blox/gtk/stamp-classes $(distdir)/packages/blox/gtk/stamp-classes
	cp -p $(srcdir)/packages/blox/gtk/Makefile.frag $(distdir)/packages/blox/gtk/Makefile.frag

$(srcdir)/packages/blox/gtk/Makefile.frag: packages/blox/gtk/package.xml
	(echo 'BloxGTK_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files BloxGTK $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(BloxGTK_FILES):'; \
	echo '$$(srcdir)/packages/blox/gtk/stamp-classes: $$(BloxGTK_FILES)'; \
	echo '	touch $$(srcdir)/packages/blox/gtk/stamp-classes') > $(srcdir)/packages/blox/gtk/Makefile.frag
all-local: $(srcdir)/packages/blox/tests/stamp-classes
Blox.star: packages/blox/tests/package.xml $(srcdir)/packages/blox/tests/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f Blox.star

dist-hook:: packages/blox/tests/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/blox/tests --dist $<

dist-hook:: $(srcdir)/packages/blox/tests/stamp-classes $(srcdir)/packages/blox/tests/Makefile.frag
	cp -p $(srcdir)/packages/blox/tests/stamp-classes $(distdir)/packages/blox/tests/stamp-classes
	cp -p $(srcdir)/packages/blox/tests/Makefile.frag $(distdir)/packages/blox/tests/Makefile.frag

$(srcdir)/packages/blox/tests/Makefile.frag: $(srcdir)/packages/blox/tests/package.xml.in
	(echo 'Blox_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files Blox $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(Blox_FILES):'; \
	echo '$$(srcdir)/packages/blox/tests/stamp-classes: $$(Blox_FILES)'; \
	echo '	touch $$(srcdir)/packages/blox/tests/stamp-classes') > $(srcdir)/packages/blox/tests/Makefile.frag
all-local: $(srcdir)/packages/httpd/stamp-classes
WebServer.star: packages/httpd/package.xml $(srcdir)/packages/httpd/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f WebServer.star

dist-hook:: packages/httpd/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/httpd --dist $<

dist-hook:: $(srcdir)/packages/httpd/stamp-classes $(srcdir)/packages/httpd/Makefile.frag
	cp -p $(srcdir)/packages/httpd/stamp-classes $(distdir)/packages/httpd/stamp-classes
	cp -p $(srcdir)/packages/httpd/Makefile.frag $(distdir)/packages/httpd/Makefile.frag

$(srcdir)/packages/httpd/Makefile.frag: packages/httpd/package.xml
	(echo 'WebServer_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files WebServer $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(WebServer_FILES):'; \
	echo '$$(srcdir)/packages/httpd/stamp-classes: $$(WebServer_FILES)'; \
	echo '	touch $$(srcdir)/packages/httpd/stamp-classes') > $(srcdir)/packages/httpd/Makefile.frag
install-data-hook:: WebServer.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" WebServer.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/WebServer.star

-include $(srcdir)/packages/httpd/Makefile.frag
all-local: WebServer.star
all-local: $(srcdir)/packages/i18n/stamp-classes
I18N.star: packages/i18n/package.xml $(srcdir)/packages/i18n/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	cd packages/i18n && $(MAKE)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f I18N.star

dist-hook:: packages/i18n/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/i18n --dist $<

dist-hook:: $(srcdir)/packages/i18n/stamp-classes $(srcdir)/packages/i18n/Makefile.frag
	cp -p $(srcdir)/packages/i18n/stamp-classes $(distdir)/packages/i18n/stamp-classes
	cp -p $(srcdir)/packages/i18n/Makefile.frag $(distdir)/packages/i18n/Makefile.frag

$(srcdir)/packages/i18n/Makefile.frag: packages/i18n/package.xml
	(echo 'I18N_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files I18N $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(I18N_FILES):'; \
	echo '$$(srcdir)/packages/i18n/stamp-classes: $$(I18N_FILES)'; \
	echo '	touch $$(srcdir)/packages/i18n/stamp-classes') > $(srcdir)/packages/i18n/Makefile.frag
install-data-hook:: I18N.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" I18N.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/I18N.star

-include $(srcdir)/packages/i18n/Makefile.frag
all-local: I18N.star
all-local: $(srcdir)/packages/iconv/stamp-classes
Iconv.star: packages/iconv/package.xml $(srcdir)/packages/iconv/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	cd packages/iconv && $(MAKE)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f Iconv.star

dist-hook:: packages/iconv/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/iconv --dist $<

dist-hook:: $(srcdir)/packages/iconv/stamp-classes $(srcdir)/packages/iconv/Makefile.frag
	cp -p $(srcdir)/packages/iconv/stamp-classes $(distdir)/packages/iconv/stamp-classes
	cp -p $(srcdir)/packages/iconv/Makefile.frag $(distdir)/packages/iconv/Makefile.frag

$(srcdir)/packages/iconv/Makefile.frag: packages/iconv/package.xml
	(echo 'Iconv_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files Iconv $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(Iconv_FILES):'; \
	echo '$$(srcdir)/packages/iconv/stamp-classes: $$(Iconv_FILES)'; \
	echo '	touch $$(srcdir)/packages/iconv/stamp-classes') > $(srcdir)/packages/iconv/Makefile.frag
install-data-hook:: Iconv.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" Iconv.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/Iconv.star

-include $(srcdir)/packages/iconv/Makefile.frag
all-local: Iconv.star
all-local: $(srcdir)/packages/java/stamp-classes
Java.star: packages/java/package.xml $(srcdir)/packages/java/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f Java.star

dist-hook:: packages/java/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/java --dist $<

dist-hook:: $(srcdir)/packages/java/stamp-classes $(srcdir)/packages/java/Makefile.frag
	cp -p $(srcdir)/packages/java/stamp-classes $(distdir)/packages/java/stamp-classes
	cp -p $(srcdir)/packages/java/Makefile.frag $(distdir)/packages/java/Makefile.frag

$(srcdir)/packages/java/Makefile.frag: packages/java/package.xml
	(echo 'Java_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files Java $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(Java_FILES):'; \
	echo '$$(srcdir)/packages/java/stamp-classes: $$(Java_FILES)'; \
	echo '	touch $$(srcdir)/packages/java/stamp-classes') > $(srcdir)/packages/java/Makefile.frag
install-data-hook:: Java.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" Java.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/Java.star

-include $(srcdir)/packages/java/Makefile.frag
all-local: Java.star
all-local: $(srcdir)/packages/digest/stamp-classes
Digest.star: packages/digest/package.xml $(srcdir)/packages/digest/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	cd packages/digest && $(MAKE)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f Digest.star

dist-hook:: packages/digest/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/digest --dist $<

dist-hook:: $(srcdir)/packages/digest/stamp-classes $(srcdir)/packages/digest/Makefile.frag
	cp -p $(srcdir)/packages/digest/stamp-classes $(distdir)/packages/digest/stamp-classes
	cp -p $(srcdir)/packages/digest/Makefile.frag $(distdir)/packages/digest/Makefile.frag

$(srcdir)/packages/digest/Makefile.frag: packages/digest/package.xml
	(echo 'Digest_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files Digest $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(Digest_FILES):'; \
	echo '$$(srcdir)/packages/digest/stamp-classes: $$(Digest_FILES)'; \
	echo '	touch $$(srcdir)/packages/digest/stamp-classes') > $(srcdir)/packages/digest/Makefile.frag
install-data-hook:: Digest.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" Digest.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/Digest.star

-include $(srcdir)/packages/digest/Makefile.frag
all-local: Digest.star
all-local: $(srcdir)/packages/gnuplot/stamp-classes
GNUPlot.star: packages/gnuplot/package.xml $(srcdir)/packages/gnuplot/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f GNUPlot.star

dist-hook:: packages/gnuplot/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/gnuplot --dist $<

dist-hook:: $(srcdir)/packages/gnuplot/stamp-classes $(srcdir)/packages/gnuplot/Makefile.frag
	cp -p $(srcdir)/packages/gnuplot/stamp-classes $(distdir)/packages/gnuplot/stamp-classes
	cp -p $(srcdir)/packages/gnuplot/Makefile.frag $(distdir)/packages/gnuplot/Makefile.frag

$(srcdir)/packages/gnuplot/Makefile.frag: packages/gnuplot/package.xml
	(echo 'GNUPlot_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files GNUPlot $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(GNUPlot_FILES):'; \
	echo '$$(srcdir)/packages/gnuplot/stamp-classes: $$(GNUPlot_FILES)'; \
	echo '	touch $$(srcdir)/packages/gnuplot/stamp-classes') > $(srcdir)/packages/gnuplot/Makefile.frag
install-data-hook:: GNUPlot.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" GNUPlot.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/GNUPlot.star

-include $(srcdir)/packages/gnuplot/Makefile.frag
all-local: GNUPlot.star
all-local: $(srcdir)/packages/magritte/stamp-classes
Magritte.star: packages/magritte/package.xml $(srcdir)/packages/magritte/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f Magritte.star

dist-hook:: packages/magritte/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/magritte --dist $<

dist-hook:: $(srcdir)/packages/magritte/stamp-classes $(srcdir)/packages/magritte/Makefile.frag
	cp -p $(srcdir)/packages/magritte/stamp-classes $(distdir)/packages/magritte/stamp-classes
	cp -p $(srcdir)/packages/magritte/Makefile.frag $(distdir)/packages/magritte/Makefile.frag

$(srcdir)/packages/magritte/Makefile.frag: packages/magritte/package.xml
	(echo 'Magritte_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files Magritte $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(Magritte_FILES):'; \
	echo '$$(srcdir)/packages/magritte/stamp-classes: $$(Magritte_FILES)'; \
	echo '	touch $$(srcdir)/packages/magritte/stamp-classes') > $(srcdir)/packages/magritte/Makefile.frag
install-data-hook:: Magritte.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" Magritte.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/Magritte.star

-include $(srcdir)/packages/magritte/Makefile.frag
all-local: Magritte.star
all-local: $(srcdir)/packages/seaside/magritte/stamp-classes
Magritte-Seaside.star: packages/seaside/magritte/package.xml $(srcdir)/packages/seaside/magritte/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f Magritte-Seaside.star

dist-hook:: packages/seaside/magritte/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/seaside/magritte --dist $<

dist-hook:: $(srcdir)/packages/seaside/magritte/stamp-classes $(srcdir)/packages/seaside/magritte/Makefile.frag
	cp -p $(srcdir)/packages/seaside/magritte/stamp-classes $(distdir)/packages/seaside/magritte/stamp-classes
	cp -p $(srcdir)/packages/seaside/magritte/Makefile.frag $(distdir)/packages/seaside/magritte/Makefile.frag

$(srcdir)/packages/seaside/magritte/Makefile.frag: packages/seaside/magritte/package.xml
	(echo 'Magritte-Seaside_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files Magritte-Seaside $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(Magritte-Seaside_FILES):'; \
	echo '$$(srcdir)/packages/seaside/magritte/stamp-classes: $$(Magritte-Seaside_FILES)'; \
	echo '	touch $$(srcdir)/packages/seaside/magritte/stamp-classes') > $(srcdir)/packages/seaside/magritte/Makefile.frag
install-data-hook:: Magritte-Seaside.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" Magritte-Seaside.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/Magritte-Seaside.star

-include $(srcdir)/packages/seaside/magritte/Makefile.frag
all-local: Magritte-Seaside.star
all-local: $(srcdir)/packages/ncurses/stamp-classes
NCurses.star: packages/ncurses/package.xml $(srcdir)/packages/ncurses/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f NCurses.star

dist-hook:: packages/ncurses/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/ncurses --dist $<

dist-hook:: $(srcdir)/packages/ncurses/stamp-classes $(srcdir)/packages/ncurses/Makefile.frag
	cp -p $(srcdir)/packages/ncurses/stamp-classes $(distdir)/packages/ncurses/stamp-classes
	cp -p $(srcdir)/packages/ncurses/Makefile.frag $(distdir)/packages/ncurses/Makefile.frag

$(srcdir)/packages/ncurses/Makefile.frag: packages/ncurses/package.xml
	(echo 'NCurses_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files NCurses $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(NCurses_FILES):'; \
	echo '$$(srcdir)/packages/ncurses/stamp-classes: $$(NCurses_FILES)'; \
	echo '	touch $$(srcdir)/packages/ncurses/stamp-classes') > $(srcdir)/packages/ncurses/Makefile.frag
all-local: $(srcdir)/packages/net/stamp-classes
NetClients.star: packages/net/package.xml $(srcdir)/packages/net/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f NetClients.star

dist-hook:: packages/net/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/net --dist $<

dist-hook:: $(srcdir)/packages/net/stamp-classes $(srcdir)/packages/net/Makefile.frag
	cp -p $(srcdir)/packages/net/stamp-classes $(distdir)/packages/net/stamp-classes
	cp -p $(srcdir)/packages/net/Makefile.frag $(distdir)/packages/net/Makefile.frag

$(srcdir)/packages/net/Makefile.frag: packages/net/package.xml
	(echo 'NetClients_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files NetClients $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(NetClients_FILES):'; \
	echo '$$(srcdir)/packages/net/stamp-classes: $$(NetClients_FILES)'; \
	echo '	touch $$(srcdir)/packages/net/stamp-classes') > $(srcdir)/packages/net/Makefile.frag
install-data-hook:: NetClients.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" NetClients.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/NetClients.star

-include $(srcdir)/packages/net/Makefile.frag
all-local: NetClients.star
all-local: $(srcdir)/packages/numerics/stamp-classes
DhbNumericalMethods.star: packages/numerics/package.xml $(srcdir)/packages/numerics/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f DhbNumericalMethods.star

dist-hook:: packages/numerics/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/numerics --dist $<

dist-hook:: $(srcdir)/packages/numerics/stamp-classes $(srcdir)/packages/numerics/Makefile.frag
	cp -p $(srcdir)/packages/numerics/stamp-classes $(distdir)/packages/numerics/stamp-classes
	cp -p $(srcdir)/packages/numerics/Makefile.frag $(distdir)/packages/numerics/Makefile.frag

$(srcdir)/packages/numerics/Makefile.frag: packages/numerics/package.xml
	(echo 'DhbNumericalMethods_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files DhbNumericalMethods $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(DhbNumericalMethods_FILES):'; \
	echo '$$(srcdir)/packages/numerics/stamp-classes: $$(DhbNumericalMethods_FILES)'; \
	echo '	touch $$(srcdir)/packages/numerics/stamp-classes') > $(srcdir)/packages/numerics/Makefile.frag
install-data-hook:: DhbNumericalMethods.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" DhbNumericalMethods.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/DhbNumericalMethods.star

-include $(srcdir)/packages/numerics/Makefile.frag
all-local: DhbNumericalMethods.star
all-local: $(srcdir)/packages/opengl/stamp-classes
OpenGL.star: packages/opengl/package.xml $(srcdir)/packages/opengl/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	cd packages/opengl && $(MAKE)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f OpenGL.star

dist-hook:: packages/opengl/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/opengl --dist $<

dist-hook:: $(srcdir)/packages/opengl/stamp-classes $(srcdir)/packages/opengl/Makefile.frag
	cp -p $(srcdir)/packages/opengl/stamp-classes $(distdir)/packages/opengl/stamp-classes
	cp -p $(srcdir)/packages/opengl/Makefile.frag $(distdir)/packages/opengl/Makefile.frag

$(srcdir)/packages/opengl/Makefile.frag: packages/opengl/package.xml
	(echo 'OpenGL_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files OpenGL $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(OpenGL_FILES):'; \
	echo '$$(srcdir)/packages/opengl/stamp-classes: $$(OpenGL_FILES)'; \
	echo '	touch $$(srcdir)/packages/opengl/stamp-classes') > $(srcdir)/packages/opengl/Makefile.frag
all-local: $(srcdir)/packages/glut/stamp-classes
GLUT.star: packages/glut/package.xml $(srcdir)/packages/glut/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	cd packages/glut && $(MAKE)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f GLUT.star

dist-hook:: packages/glut/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/glut --dist $<

dist-hook:: $(srcdir)/packages/glut/stamp-classes $(srcdir)/packages/glut/Makefile.frag
	cp -p $(srcdir)/packages/glut/stamp-classes $(distdir)/packages/glut/stamp-classes
	cp -p $(srcdir)/packages/glut/Makefile.frag $(distdir)/packages/glut/Makefile.frag

$(srcdir)/packages/glut/Makefile.frag: packages/glut/package.xml
	(echo 'GLUT_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files GLUT $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(GLUT_FILES):'; \
	echo '$$(srcdir)/packages/glut/stamp-classes: $$(GLUT_FILES)'; \
	echo '	touch $$(srcdir)/packages/glut/stamp-classes') > $(srcdir)/packages/glut/Makefile.frag
all-local: $(srcdir)/packages/sdl/libsdl/stamp-classes
LibSDL.star: packages/sdl/libsdl/package.xml $(srcdir)/packages/sdl/libsdl/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	cd packages/sdl/libsdl && $(MAKE)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f LibSDL.star

dist-hook:: packages/sdl/libsdl/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/sdl/libsdl --dist $<

dist-hook:: $(srcdir)/packages/sdl/libsdl/stamp-classes $(srcdir)/packages/sdl/libsdl/Makefile.frag
	cp -p $(srcdir)/packages/sdl/libsdl/stamp-classes $(distdir)/packages/sdl/libsdl/stamp-classes
	cp -p $(srcdir)/packages/sdl/libsdl/Makefile.frag $(distdir)/packages/sdl/libsdl/Makefile.frag

$(srcdir)/packages/sdl/libsdl/Makefile.frag: packages/sdl/libsdl/package.xml
	(echo 'LibSDL_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files LibSDL $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(LibSDL_FILES):'; \
	echo '$$(srcdir)/packages/sdl/libsdl/stamp-classes: $$(LibSDL_FILES)'; \
	echo '	touch $$(srcdir)/packages/sdl/libsdl/stamp-classes') > $(srcdir)/packages/sdl/libsdl/Makefile.frag
all-local: $(srcdir)/packages/sdl/libsdl_gl/stamp-classes
LibSDL_GL.star: packages/sdl/libsdl_gl/package.xml $(srcdir)/packages/sdl/libsdl_gl/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f LibSDL_GL.star

dist-hook:: packages/sdl/libsdl_gl/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/sdl/libsdl_gl --dist $<

dist-hook:: $(srcdir)/packages/sdl/libsdl_gl/stamp-classes $(srcdir)/packages/sdl/libsdl_gl/Makefile.frag
	cp -p $(srcdir)/packages/sdl/libsdl_gl/stamp-classes $(distdir)/packages/sdl/libsdl_gl/stamp-classes
	cp -p $(srcdir)/packages/sdl/libsdl_gl/Makefile.frag $(distdir)/packages/sdl/libsdl_gl/Makefile.frag

$(srcdir)/packages/sdl/libsdl_gl/Makefile.frag: packages/sdl/libsdl_gl/package.xml
	(echo 'LibSDL_GL_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files LibSDL_GL $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(LibSDL_GL_FILES):'; \
	echo '$$(srcdir)/packages/sdl/libsdl_gl/stamp-classes: $$(LibSDL_GL_FILES)'; \
	echo '	touch $$(srcdir)/packages/sdl/libsdl_gl/stamp-classes') > $(srcdir)/packages/sdl/libsdl_gl/Makefile.frag
all-local: $(srcdir)/packages/sdl/cairo/stamp-classes
CairoSDL.star: packages/sdl/cairo/package.xml $(srcdir)/packages/sdl/cairo/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f CairoSDL.star

dist-hook:: packages/sdl/cairo/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/sdl/cairo --dist $<

dist-hook:: $(srcdir)/packages/sdl/cairo/stamp-classes $(srcdir)/packages/sdl/cairo/Makefile.frag
	cp -p $(srcdir)/packages/sdl/cairo/stamp-classes $(distdir)/packages/sdl/cairo/stamp-classes
	cp -p $(srcdir)/packages/sdl/cairo/Makefile.frag $(distdir)/packages/sdl/cairo/Makefile.frag

$(srcdir)/packages/sdl/cairo/Makefile.frag: packages/sdl/cairo/package.xml
	(echo 'CairoSDL_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files CairoSDL $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(CairoSDL_FILES):'; \
	echo '$$(srcdir)/packages/sdl/cairo/stamp-classes: $$(CairoSDL_FILES)'; \
	echo '	touch $$(srcdir)/packages/sdl/cairo/stamp-classes') > $(srcdir)/packages/sdl/cairo/Makefile.frag
all-local: $(srcdir)/packages/sdl/libsdl_image/stamp-classes
LibSDL_image.star: packages/sdl/libsdl_image/package.xml $(srcdir)/packages/sdl/libsdl_image/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f LibSDL_image.star

dist-hook:: packages/sdl/libsdl_image/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/sdl/libsdl_image --dist $<

dist-hook:: $(srcdir)/packages/sdl/libsdl_image/stamp-classes $(srcdir)/packages/sdl/libsdl_image/Makefile.frag
	cp -p $(srcdir)/packages/sdl/libsdl_image/stamp-classes $(distdir)/packages/sdl/libsdl_image/stamp-classes
	cp -p $(srcdir)/packages/sdl/libsdl_image/Makefile.frag $(distdir)/packages/sdl/libsdl_image/Makefile.frag

$(srcdir)/packages/sdl/libsdl_image/Makefile.frag: packages/sdl/libsdl_image/package.xml
	(echo 'LibSDL_image_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files LibSDL_image $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(LibSDL_image_FILES):'; \
	echo '$$(srcdir)/packages/sdl/libsdl_image/stamp-classes: $$(LibSDL_image_FILES)'; \
	echo '	touch $$(srcdir)/packages/sdl/libsdl_image/stamp-classes') > $(srcdir)/packages/sdl/libsdl_image/Makefile.frag
all-local: $(srcdir)/packages/sdl/libsdl_mixer/stamp-classes
LibSDL_mixer.star: packages/sdl/libsdl_mixer/package.xml $(srcdir)/packages/sdl/libsdl_mixer/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f LibSDL_mixer.star

dist-hook:: packages/sdl/libsdl_mixer/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/sdl/libsdl_mixer --dist $<

dist-hook:: $(srcdir)/packages/sdl/libsdl_mixer/stamp-classes $(srcdir)/packages/sdl/libsdl_mixer/Makefile.frag
	cp -p $(srcdir)/packages/sdl/libsdl_mixer/stamp-classes $(distdir)/packages/sdl/libsdl_mixer/stamp-classes
	cp -p $(srcdir)/packages/sdl/libsdl_mixer/Makefile.frag $(distdir)/packages/sdl/libsdl_mixer/Makefile.frag

$(srcdir)/packages/sdl/libsdl_mixer/Makefile.frag: packages/sdl/libsdl_mixer/package.xml
	(echo 'LibSDL_mixer_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files LibSDL_mixer $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(LibSDL_mixer_FILES):'; \
	echo '$$(srcdir)/packages/sdl/libsdl_mixer/stamp-classes: $$(LibSDL_mixer_FILES)'; \
	echo '	touch $$(srcdir)/packages/sdl/libsdl_mixer/stamp-classes') > $(srcdir)/packages/sdl/libsdl_mixer/Makefile.frag
all-local: $(srcdir)/packages/sdl/libsdl_sound/stamp-classes
LibSDL_sound.star: packages/sdl/libsdl_sound/package.xml $(srcdir)/packages/sdl/libsdl_sound/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f LibSDL_sound.star

dist-hook:: packages/sdl/libsdl_sound/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/sdl/libsdl_sound --dist $<

dist-hook:: $(srcdir)/packages/sdl/libsdl_sound/stamp-classes $(srcdir)/packages/sdl/libsdl_sound/Makefile.frag
	cp -p $(srcdir)/packages/sdl/libsdl_sound/stamp-classes $(distdir)/packages/sdl/libsdl_sound/stamp-classes
	cp -p $(srcdir)/packages/sdl/libsdl_sound/Makefile.frag $(distdir)/packages/sdl/libsdl_sound/Makefile.frag

$(srcdir)/packages/sdl/libsdl_sound/Makefile.frag: packages/sdl/libsdl_sound/package.xml
	(echo 'LibSDL_sound_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files LibSDL_sound $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(LibSDL_sound_FILES):'; \
	echo '$$(srcdir)/packages/sdl/libsdl_sound/stamp-classes: $$(LibSDL_sound_FILES)'; \
	echo '	touch $$(srcdir)/packages/sdl/libsdl_sound/stamp-classes') > $(srcdir)/packages/sdl/libsdl_sound/Makefile.frag
all-local: $(srcdir)/packages/sdl/libsdl_ttf/stamp-classes
LibSDL_ttf.star: packages/sdl/libsdl_ttf/package.xml $(srcdir)/packages/sdl/libsdl_ttf/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f LibSDL_ttf.star

dist-hook:: packages/sdl/libsdl_ttf/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/sdl/libsdl_ttf --dist $<

dist-hook:: $(srcdir)/packages/sdl/libsdl_ttf/stamp-classes $(srcdir)/packages/sdl/libsdl_ttf/Makefile.frag
	cp -p $(srcdir)/packages/sdl/libsdl_ttf/stamp-classes $(distdir)/packages/sdl/libsdl_ttf/stamp-classes
	cp -p $(srcdir)/packages/sdl/libsdl_ttf/Makefile.frag $(distdir)/packages/sdl/libsdl_ttf/Makefile.frag

$(srcdir)/packages/sdl/libsdl_ttf/Makefile.frag: packages/sdl/libsdl_ttf/package.xml
	(echo 'LibSDL_ttf_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files LibSDL_ttf $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(LibSDL_ttf_FILES):'; \
	echo '$$(srcdir)/packages/sdl/libsdl_ttf/stamp-classes: $$(LibSDL_ttf_FILES)'; \
	echo '	touch $$(srcdir)/packages/sdl/libsdl_ttf/stamp-classes') > $(srcdir)/packages/sdl/libsdl_ttf/Makefile.frag
all-local: $(srcdir)/packages/stinst/compiler/stamp-classes
Compiler.star: packages/stinst/compiler/package.xml $(srcdir)/packages/stinst/compiler/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f Compiler.star

dist-hook:: packages/stinst/compiler/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/stinst/compiler --dist $<

dist-hook:: $(srcdir)/packages/stinst/compiler/stamp-classes $(srcdir)/packages/stinst/compiler/Makefile.frag
	cp -p $(srcdir)/packages/stinst/compiler/stamp-classes $(distdir)/packages/stinst/compiler/stamp-classes
	cp -p $(srcdir)/packages/stinst/compiler/Makefile.frag $(distdir)/packages/stinst/compiler/Makefile.frag

$(srcdir)/packages/stinst/compiler/Makefile.frag: packages/stinst/compiler/package.xml
	(echo 'Compiler_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files Compiler $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(Compiler_FILES):'; \
	echo '$$(srcdir)/packages/stinst/compiler/stamp-classes: $$(Compiler_FILES)'; \
	echo '	touch $$(srcdir)/packages/stinst/compiler/stamp-classes') > $(srcdir)/packages/stinst/compiler/Makefile.frag
install-data-hook:: Compiler.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" Compiler.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/Compiler.star

-include $(srcdir)/packages/stinst/compiler/Makefile.frag
all-local: Compiler.star
all-local: $(srcdir)/packages/stinst/parser/stamp-classes
Parser.star: packages/stinst/parser/package.xml $(srcdir)/packages/stinst/parser/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f Parser.star

dist-hook:: packages/stinst/parser/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/stinst/parser --dist $<

dist-hook:: $(srcdir)/packages/stinst/parser/stamp-classes $(srcdir)/packages/stinst/parser/Makefile.frag
	cp -p $(srcdir)/packages/stinst/parser/stamp-classes $(distdir)/packages/stinst/parser/stamp-classes
	cp -p $(srcdir)/packages/stinst/parser/Makefile.frag $(distdir)/packages/stinst/parser/Makefile.frag

$(srcdir)/packages/stinst/parser/Makefile.frag: packages/stinst/parser/package.xml
	(echo 'Parser_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files Parser $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(Parser_FILES):'; \
	echo '$$(srcdir)/packages/stinst/parser/stamp-classes: $$(Parser_FILES)'; \
	echo '	touch $$(srcdir)/packages/stinst/parser/stamp-classes') > $(srcdir)/packages/stinst/parser/Makefile.frag
install-data-hook:: Parser.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" Parser.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/Parser.star

-include $(srcdir)/packages/stinst/parser/Makefile.frag
all-local: Parser.star
all-local: $(srcdir)/packages/stinst/doc/stamp-classes
ClassPublisher.star: packages/stinst/doc/package.xml $(srcdir)/packages/stinst/doc/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f ClassPublisher.star

dist-hook:: packages/stinst/doc/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/stinst/doc --dist $<

dist-hook:: $(srcdir)/packages/stinst/doc/stamp-classes $(srcdir)/packages/stinst/doc/Makefile.frag
	cp -p $(srcdir)/packages/stinst/doc/stamp-classes $(distdir)/packages/stinst/doc/stamp-classes
	cp -p $(srcdir)/packages/stinst/doc/Makefile.frag $(distdir)/packages/stinst/doc/Makefile.frag

$(srcdir)/packages/stinst/doc/Makefile.frag: packages/stinst/doc/package.xml
	(echo 'ClassPublisher_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files ClassPublisher $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(ClassPublisher_FILES):'; \
	echo '$$(srcdir)/packages/stinst/doc/stamp-classes: $$(ClassPublisher_FILES)'; \
	echo '	touch $$(srcdir)/packages/stinst/doc/stamp-classes') > $(srcdir)/packages/stinst/doc/Makefile.frag
install-data-hook:: ClassPublisher.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" ClassPublisher.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/ClassPublisher.star

-include $(srcdir)/packages/stinst/doc/Makefile.frag
all-local: ClassPublisher.star
all-local: $(srcdir)/packages/profile/stamp-classes
ProfileTools.star: packages/profile/package.xml $(srcdir)/packages/profile/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f ProfileTools.star

dist-hook:: packages/profile/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/profile --dist $<

dist-hook:: $(srcdir)/packages/profile/stamp-classes $(srcdir)/packages/profile/Makefile.frag
	cp -p $(srcdir)/packages/profile/stamp-classes $(distdir)/packages/profile/stamp-classes
	cp -p $(srcdir)/packages/profile/Makefile.frag $(distdir)/packages/profile/Makefile.frag

$(srcdir)/packages/profile/Makefile.frag: packages/profile/package.xml
	(echo 'ProfileTools_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files ProfileTools $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(ProfileTools_FILES):'; \
	echo '$$(srcdir)/packages/profile/stamp-classes: $$(ProfileTools_FILES)'; \
	echo '	touch $$(srcdir)/packages/profile/stamp-classes') > $(srcdir)/packages/profile/Makefile.frag
install-data-hook:: ProfileTools.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" ProfileTools.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/ProfileTools.star

-include $(srcdir)/packages/profile/Makefile.frag
all-local: ProfileTools.star
all-local: $(srcdir)/packages/roe/stamp-classes
ROE.star: packages/roe/package.xml $(srcdir)/packages/roe/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f ROE.star

dist-hook:: packages/roe/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/roe --dist $<

dist-hook:: $(srcdir)/packages/roe/stamp-classes $(srcdir)/packages/roe/Makefile.frag
	cp -p $(srcdir)/packages/roe/stamp-classes $(distdir)/packages/roe/stamp-classes
	cp -p $(srcdir)/packages/roe/Makefile.frag $(distdir)/packages/roe/Makefile.frag

$(srcdir)/packages/roe/Makefile.frag: packages/roe/package.xml
	(echo 'ROE_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files ROE $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(ROE_FILES):'; \
	echo '$$(srcdir)/packages/roe/stamp-classes: $$(ROE_FILES)'; \
	echo '	touch $$(srcdir)/packages/roe/stamp-classes') > $(srcdir)/packages/roe/Makefile.frag
install-data-hook:: ROE.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" ROE.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/ROE.star

-include $(srcdir)/packages/roe/Makefile.frag
all-local: ROE.star
all-local: $(srcdir)/packages/sandstonedb/stamp-classes
SandstoneDb.star: packages/sandstonedb/package.xml $(srcdir)/packages/sandstonedb/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f SandstoneDb.star

dist-hook:: packages/sandstonedb/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/sandstonedb --dist $<

dist-hook:: $(srcdir)/packages/sandstonedb/stamp-classes $(srcdir)/packages/sandstonedb/Makefile.frag
	cp -p $(srcdir)/packages/sandstonedb/stamp-classes $(distdir)/packages/sandstonedb/stamp-classes
	cp -p $(srcdir)/packages/sandstonedb/Makefile.frag $(distdir)/packages/sandstonedb/Makefile.frag

$(srcdir)/packages/sandstonedb/Makefile.frag: packages/sandstonedb/package.xml
	(echo 'SandstoneDb_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files SandstoneDb $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(SandstoneDb_FILES):'; \
	echo '$$(srcdir)/packages/sandstonedb/stamp-classes: $$(SandstoneDb_FILES)'; \
	echo '	touch $$(srcdir)/packages/sandstonedb/stamp-classes') > $(srcdir)/packages/sandstonedb/Makefile.frag
install-data-hook:: SandstoneDb.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" SandstoneDb.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/SandstoneDb.star

-include $(srcdir)/packages/sandstonedb/Makefile.frag
all-local: SandstoneDb.star
all-local: $(srcdir)/packages/seaside/core/stamp-classes
Seaside-Core.star: packages/seaside/core/package.xml $(srcdir)/packages/seaside/core/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f Seaside-Core.star

dist-hook:: packages/seaside/core/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/seaside/core --dist $<

dist-hook:: $(srcdir)/packages/seaside/core/stamp-classes $(srcdir)/packages/seaside/core/Makefile.frag
	cp -p $(srcdir)/packages/seaside/core/stamp-classes $(distdir)/packages/seaside/core/stamp-classes
	cp -p $(srcdir)/packages/seaside/core/Makefile.frag $(distdir)/packages/seaside/core/Makefile.frag

$(srcdir)/packages/seaside/core/Makefile.frag: packages/seaside/core/package.xml
	(echo 'Seaside-Core_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files Seaside-Core $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(Seaside-Core_FILES):'; \
	echo '$$(srcdir)/packages/seaside/core/stamp-classes: $$(Seaside-Core_FILES)'; \
	echo '	touch $$(srcdir)/packages/seaside/core/stamp-classes') > $(srcdir)/packages/seaside/core/Makefile.frag
install-data-hook:: Seaside-Core.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" Seaside-Core.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/Seaside-Core.star

-include $(srcdir)/packages/seaside/core/Makefile.frag
all-local: Seaside-Core.star
all-local: $(srcdir)/packages/seaside/dev/stamp-classes
Seaside-Development.star: packages/seaside/dev/package.xml $(srcdir)/packages/seaside/dev/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f Seaside-Development.star

dist-hook:: packages/seaside/dev/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/seaside/dev --dist $<

dist-hook:: $(srcdir)/packages/seaside/dev/stamp-classes $(srcdir)/packages/seaside/dev/Makefile.frag
	cp -p $(srcdir)/packages/seaside/dev/stamp-classes $(distdir)/packages/seaside/dev/stamp-classes
	cp -p $(srcdir)/packages/seaside/dev/Makefile.frag $(distdir)/packages/seaside/dev/Makefile.frag

$(srcdir)/packages/seaside/dev/Makefile.frag: packages/seaside/dev/package.xml
	(echo 'Seaside-Development_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files Seaside-Development $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(Seaside-Development_FILES):'; \
	echo '$$(srcdir)/packages/seaside/dev/stamp-classes: $$(Seaside-Development_FILES)'; \
	echo '	touch $$(srcdir)/packages/seaside/dev/stamp-classes') > $(srcdir)/packages/seaside/dev/Makefile.frag
install-data-hook:: Seaside-Development.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" Seaside-Development.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/Seaside-Development.star

-include $(srcdir)/packages/seaside/dev/Makefile.frag
all-local: Seaside-Development.star
all-local: $(srcdir)/packages/seaside/examples/stamp-classes
Seaside-Examples.star: packages/seaside/examples/package.xml $(srcdir)/packages/seaside/examples/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f Seaside-Examples.star

dist-hook:: packages/seaside/examples/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/seaside/examples --dist $<

dist-hook:: $(srcdir)/packages/seaside/examples/stamp-classes $(srcdir)/packages/seaside/examples/Makefile.frag
	cp -p $(srcdir)/packages/seaside/examples/stamp-classes $(distdir)/packages/seaside/examples/stamp-classes
	cp -p $(srcdir)/packages/seaside/examples/Makefile.frag $(distdir)/packages/seaside/examples/Makefile.frag

$(srcdir)/packages/seaside/examples/Makefile.frag: packages/seaside/examples/package.xml
	(echo 'Seaside-Examples_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files Seaside-Examples $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(Seaside-Examples_FILES):'; \
	echo '$$(srcdir)/packages/seaside/examples/stamp-classes: $$(Seaside-Examples_FILES)'; \
	echo '	touch $$(srcdir)/packages/seaside/examples/stamp-classes') > $(srcdir)/packages/seaside/examples/Makefile.frag
install-data-hook:: Seaside-Examples.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" Seaside-Examples.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/Seaside-Examples.star

-include $(srcdir)/packages/seaside/examples/Makefile.frag
all-local: Seaside-Examples.star
all-local: $(srcdir)/packages/seaside/swazoo/stamp-classes
Seaside.star: packages/seaside/swazoo/package.xml $(srcdir)/packages/seaside/swazoo/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f Seaside.star

dist-hook:: packages/seaside/swazoo/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/seaside/swazoo --dist $<

dist-hook:: $(srcdir)/packages/seaside/swazoo/stamp-classes $(srcdir)/packages/seaside/swazoo/Makefile.frag
	cp -p $(srcdir)/packages/seaside/swazoo/stamp-classes $(distdir)/packages/seaside/swazoo/stamp-classes
	cp -p $(srcdir)/packages/seaside/swazoo/Makefile.frag $(distdir)/packages/seaside/swazoo/Makefile.frag

$(srcdir)/packages/seaside/swazoo/Makefile.frag: packages/seaside/swazoo/package.xml
	(echo 'Seaside_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files Seaside $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(Seaside_FILES):'; \
	echo '$$(srcdir)/packages/seaside/swazoo/stamp-classes: $$(Seaside_FILES)'; \
	echo '	touch $$(srcdir)/packages/seaside/swazoo/stamp-classes') > $(srcdir)/packages/seaside/swazoo/Makefile.frag
install-data-hook:: Seaside.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" Seaside.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/Seaside.star

-include $(srcdir)/packages/seaside/swazoo/Makefile.frag
all-local: Seaside.star
all-local: $(srcdir)/packages/sport/stamp-classes
Sport.star: packages/sport/package.xml $(srcdir)/packages/sport/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f Sport.star

dist-hook:: packages/sport/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/sport --dist $<

dist-hook:: $(srcdir)/packages/sport/stamp-classes $(srcdir)/packages/sport/Makefile.frag
	cp -p $(srcdir)/packages/sport/stamp-classes $(distdir)/packages/sport/stamp-classes
	cp -p $(srcdir)/packages/sport/Makefile.frag $(distdir)/packages/sport/Makefile.frag

$(srcdir)/packages/sport/Makefile.frag: packages/sport/package.xml
	(echo 'Sport_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files Sport $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(Sport_FILES):'; \
	echo '$$(srcdir)/packages/sport/stamp-classes: $$(Sport_FILES)'; \
	echo '	touch $$(srcdir)/packages/sport/stamp-classes') > $(srcdir)/packages/sport/Makefile.frag
install-data-hook:: Sport.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" Sport.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/Sport.star

-include $(srcdir)/packages/sport/Makefile.frag
all-local: Sport.star
all-local: $(srcdir)/packages/sunit/stamp-classes
SUnit.star: packages/sunit/package.xml $(srcdir)/packages/sunit/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f SUnit.star

dist-hook:: packages/sunit/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/sunit --dist $<

dist-hook:: $(srcdir)/packages/sunit/stamp-classes $(srcdir)/packages/sunit/Makefile.frag
	cp -p $(srcdir)/packages/sunit/stamp-classes $(distdir)/packages/sunit/stamp-classes
	cp -p $(srcdir)/packages/sunit/Makefile.frag $(distdir)/packages/sunit/Makefile.frag

$(srcdir)/packages/sunit/Makefile.frag: packages/sunit/package.xml
	(echo 'SUnit_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files SUnit $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(SUnit_FILES):'; \
	echo '$$(srcdir)/packages/sunit/stamp-classes: $$(SUnit_FILES)'; \
	echo '	touch $$(srcdir)/packages/sunit/stamp-classes') > $(srcdir)/packages/sunit/Makefile.frag
install-data-hook:: SUnit.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" SUnit.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/SUnit.star

-include $(srcdir)/packages/sunit/Makefile.frag
all-local: SUnit.star
all-local: $(srcdir)/packages/swazoo-httpd/stamp-classes
Swazoo.star: packages/swazoo-httpd/package.xml $(srcdir)/packages/swazoo-httpd/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f Swazoo.star

dist-hook:: packages/swazoo-httpd/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/swazoo-httpd --dist $<

dist-hook:: $(srcdir)/packages/swazoo-httpd/stamp-classes $(srcdir)/packages/swazoo-httpd/Makefile.frag
	cp -p $(srcdir)/packages/swazoo-httpd/stamp-classes $(distdir)/packages/swazoo-httpd/stamp-classes
	cp -p $(srcdir)/packages/swazoo-httpd/Makefile.frag $(distdir)/packages/swazoo-httpd/Makefile.frag

$(srcdir)/packages/swazoo-httpd/Makefile.frag: packages/swazoo-httpd/package.xml
	(echo 'Swazoo_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files Swazoo $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(Swazoo_FILES):'; \
	echo '$$(srcdir)/packages/swazoo-httpd/stamp-classes: $$(Swazoo_FILES)'; \
	echo '	touch $$(srcdir)/packages/swazoo-httpd/stamp-classes') > $(srcdir)/packages/swazoo-httpd/Makefile.frag
install-data-hook:: Swazoo.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" Swazoo.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/Swazoo.star

-include $(srcdir)/packages/swazoo-httpd/Makefile.frag
all-local: Swazoo.star
all-local: $(srcdir)/packages/sockets/stamp-classes
Sockets.star: packages/sockets/package.xml $(srcdir)/packages/sockets/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f Sockets.star

dist-hook:: packages/sockets/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/sockets --dist $<

dist-hook:: $(srcdir)/packages/sockets/stamp-classes $(srcdir)/packages/sockets/Makefile.frag
	cp -p $(srcdir)/packages/sockets/stamp-classes $(distdir)/packages/sockets/stamp-classes
	cp -p $(srcdir)/packages/sockets/Makefile.frag $(distdir)/packages/sockets/Makefile.frag

$(srcdir)/packages/sockets/Makefile.frag: packages/sockets/package.xml
	(echo 'Sockets_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files Sockets $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(Sockets_FILES):'; \
	echo '$$(srcdir)/packages/sockets/stamp-classes: $$(Sockets_FILES)'; \
	echo '	touch $$(srcdir)/packages/sockets/stamp-classes') > $(srcdir)/packages/sockets/Makefile.frag
install-data-hook:: Sockets.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" Sockets.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/Sockets.star

-include $(srcdir)/packages/sockets/Makefile.frag
all-local: Sockets.star
all-local: $(srcdir)/packages/vfs/stamp-classes
VFSAddOns.star: packages/vfs/package.xml $(srcdir)/packages/vfs/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	cd packages/vfs && $(MAKE)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f VFSAddOns.star

dist-hook:: packages/vfs/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/vfs --dist $<

dist-hook:: $(srcdir)/packages/vfs/stamp-classes $(srcdir)/packages/vfs/Makefile.frag
	cp -p $(srcdir)/packages/vfs/stamp-classes $(distdir)/packages/vfs/stamp-classes
	cp -p $(srcdir)/packages/vfs/Makefile.frag $(distdir)/packages/vfs/Makefile.frag

$(srcdir)/packages/vfs/Makefile.frag: packages/vfs/package.xml
	(echo 'VFSAddOns_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files VFSAddOns $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(VFSAddOns_FILES):'; \
	echo '$$(srcdir)/packages/vfs/stamp-classes: $$(VFSAddOns_FILES)'; \
	echo '	touch $$(srcdir)/packages/vfs/stamp-classes') > $(srcdir)/packages/vfs/Makefile.frag
install-data-hook:: VFSAddOns.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" VFSAddOns.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/VFSAddOns.star

-include $(srcdir)/packages/vfs/Makefile.frag
all-local: VFSAddOns.star
all-local: $(srcdir)/packages/visualgst/stamp-classes
VisualGST.star: packages/visualgst/package.xml $(srcdir)/packages/visualgst/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f VisualGST.star

dist-hook:: packages/visualgst/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/visualgst --dist $<

dist-hook:: $(srcdir)/packages/visualgst/stamp-classes $(srcdir)/packages/visualgst/Makefile.frag
	cp -p $(srcdir)/packages/visualgst/stamp-classes $(distdir)/packages/visualgst/stamp-classes
	cp -p $(srcdir)/packages/visualgst/Makefile.frag $(distdir)/packages/visualgst/Makefile.frag

$(srcdir)/packages/visualgst/Makefile.frag: packages/visualgst/package.xml
	(echo 'VisualGST_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files VisualGST $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(VisualGST_FILES):'; \
	echo '$$(srcdir)/packages/visualgst/stamp-classes: $$(VisualGST_FILES)'; \
	echo '	touch $$(srcdir)/packages/visualgst/stamp-classes') > $(srcdir)/packages/visualgst/Makefile.frag
install-data-hook:: VisualGST.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" VisualGST.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/VisualGST.star

-include $(srcdir)/packages/visualgst/Makefile.frag
all-local: VisualGST.star
all-local: $(srcdir)/packages/xml/builder/stamp-classes
XML-XMLNodeBuilder.star: packages/xml/builder/package.xml $(srcdir)/packages/xml/builder/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f XML-XMLNodeBuilder.star

dist-hook:: packages/xml/builder/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/xml/builder --dist $<

dist-hook:: $(srcdir)/packages/xml/builder/stamp-classes $(srcdir)/packages/xml/builder/Makefile.frag
	cp -p $(srcdir)/packages/xml/builder/stamp-classes $(distdir)/packages/xml/builder/stamp-classes
	cp -p $(srcdir)/packages/xml/builder/Makefile.frag $(distdir)/packages/xml/builder/Makefile.frag

$(srcdir)/packages/xml/builder/Makefile.frag: packages/xml/builder/package.xml
	(echo 'XML-XMLNodeBuilder_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files XML-XMLNodeBuilder $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(XML-XMLNodeBuilder_FILES):'; \
	echo '$$(srcdir)/packages/xml/builder/stamp-classes: $$(XML-XMLNodeBuilder_FILES)'; \
	echo '	touch $$(srcdir)/packages/xml/builder/stamp-classes') > $(srcdir)/packages/xml/builder/Makefile.frag
install-data-hook:: XML-XMLNodeBuilder.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" XML-XMLNodeBuilder.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/XML-XMLNodeBuilder.star

-include $(srcdir)/packages/xml/builder/Makefile.frag
all-local: XML-XMLNodeBuilder.star
all-local: $(srcdir)/packages/xml/dom/stamp-classes
XML-DOM.star: packages/xml/dom/package.xml $(srcdir)/packages/xml/dom/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f XML-DOM.star

dist-hook:: packages/xml/dom/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/xml/dom --dist $<

dist-hook:: $(srcdir)/packages/xml/dom/stamp-classes $(srcdir)/packages/xml/dom/Makefile.frag
	cp -p $(srcdir)/packages/xml/dom/stamp-classes $(distdir)/packages/xml/dom/stamp-classes
	cp -p $(srcdir)/packages/xml/dom/Makefile.frag $(distdir)/packages/xml/dom/Makefile.frag

$(srcdir)/packages/xml/dom/Makefile.frag: packages/xml/dom/package.xml
	(echo 'XML-DOM_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files XML-DOM $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(XML-DOM_FILES):'; \
	echo '$$(srcdir)/packages/xml/dom/stamp-classes: $$(XML-DOM_FILES)'; \
	echo '	touch $$(srcdir)/packages/xml/dom/stamp-classes') > $(srcdir)/packages/xml/dom/Makefile.frag
install-data-hook:: XML-DOM.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" XML-DOM.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/XML-DOM.star

-include $(srcdir)/packages/xml/dom/Makefile.frag
all-local: XML-DOM.star
all-local: $(srcdir)/packages/xml/tests/stamp-classes
XML-ParserTests.star: packages/xml/tests/package.xml $(srcdir)/packages/xml/tests/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f XML-ParserTests.star

dist-hook:: packages/xml/tests/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/xml/tests --dist $<

dist-hook:: $(srcdir)/packages/xml/tests/stamp-classes $(srcdir)/packages/xml/tests/Makefile.frag
	cp -p $(srcdir)/packages/xml/tests/stamp-classes $(distdir)/packages/xml/tests/stamp-classes
	cp -p $(srcdir)/packages/xml/tests/Makefile.frag $(distdir)/packages/xml/tests/Makefile.frag

$(srcdir)/packages/xml/tests/Makefile.frag: packages/xml/tests/package.xml
	(echo 'XML-ParserTests_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files XML-ParserTests $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(XML-ParserTests_FILES):'; \
	echo '$$(srcdir)/packages/xml/tests/stamp-classes: $$(XML-ParserTests_FILES)'; \
	echo '	touch $$(srcdir)/packages/xml/tests/stamp-classes') > $(srcdir)/packages/xml/tests/Makefile.frag
install-data-hook:: XML-ParserTests.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" XML-ParserTests.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/XML-ParserTests.star

-include $(srcdir)/packages/xml/tests/Makefile.frag
all-local: XML-ParserTests.star
all-local: $(srcdir)/packages/xml/pullparser/stamp-classes
XML-PullParser.star: packages/xml/pullparser/package.xml $(srcdir)/packages/xml/pullparser/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f XML-PullParser.star

dist-hook:: packages/xml/pullparser/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/xml/pullparser --dist $<

dist-hook:: $(srcdir)/packages/xml/pullparser/stamp-classes $(srcdir)/packages/xml/pullparser/Makefile.frag
	cp -p $(srcdir)/packages/xml/pullparser/stamp-classes $(distdir)/packages/xml/pullparser/stamp-classes
	cp -p $(srcdir)/packages/xml/pullparser/Makefile.frag $(distdir)/packages/xml/pullparser/Makefile.frag

$(srcdir)/packages/xml/pullparser/Makefile.frag: packages/xml/pullparser/package.xml
	(echo 'XML-PullParser_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files XML-PullParser $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(XML-PullParser_FILES):'; \
	echo '$$(srcdir)/packages/xml/pullparser/stamp-classes: $$(XML-PullParser_FILES)'; \
	echo '	touch $$(srcdir)/packages/xml/pullparser/stamp-classes') > $(srcdir)/packages/xml/pullparser/Makefile.frag
install-data-hook:: XML-PullParser.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" XML-PullParser.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/XML-PullParser.star

-include $(srcdir)/packages/xml/pullparser/Makefile.frag
all-local: XML-PullParser.star
all-local: $(srcdir)/packages/xml/expat/stamp-classes
XML-Expat.star: packages/xml/expat/package.xml $(srcdir)/packages/xml/expat/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	cd packages/xml/expat && $(MAKE)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f XML-Expat.star

dist-hook:: packages/xml/expat/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/xml/expat --dist $<

dist-hook:: $(srcdir)/packages/xml/expat/stamp-classes $(srcdir)/packages/xml/expat/Makefile.frag
	cp -p $(srcdir)/packages/xml/expat/stamp-classes $(distdir)/packages/xml/expat/stamp-classes
	cp -p $(srcdir)/packages/xml/expat/Makefile.frag $(distdir)/packages/xml/expat/Makefile.frag

$(srcdir)/packages/xml/expat/Makefile.frag: packages/xml/expat/package.xml
	(echo 'XML-Expat_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files XML-Expat $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(XML-Expat_FILES):'; \
	echo '$$(srcdir)/packages/xml/expat/stamp-classes: $$(XML-Expat_FILES)'; \
	echo '	touch $$(srcdir)/packages/xml/expat/stamp-classes') > $(srcdir)/packages/xml/expat/Makefile.frag
install-data-hook:: XML-Expat.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" XML-Expat.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/XML-Expat.star

-include $(srcdir)/packages/xml/expat/Makefile.frag
all-local: XML-Expat.star
all-local: $(srcdir)/packages/xml/parser/stamp-classes
XML-XMLParser.star: packages/xml/parser/package.xml $(srcdir)/packages/xml/parser/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f XML-XMLParser.star

dist-hook:: packages/xml/parser/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/xml/parser --dist $<

dist-hook:: $(srcdir)/packages/xml/parser/stamp-classes $(srcdir)/packages/xml/parser/Makefile.frag
	cp -p $(srcdir)/packages/xml/parser/stamp-classes $(distdir)/packages/xml/parser/stamp-classes
	cp -p $(srcdir)/packages/xml/parser/Makefile.frag $(distdir)/packages/xml/parser/Makefile.frag

$(srcdir)/packages/xml/parser/Makefile.frag: packages/xml/parser/package.xml
	(echo 'XML-XMLParser_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files XML-XMLParser $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(XML-XMLParser_FILES):'; \
	echo '$$(srcdir)/packages/xml/parser/stamp-classes: $$(XML-XMLParser_FILES)'; \
	echo '	touch $$(srcdir)/packages/xml/parser/stamp-classes') > $(srcdir)/packages/xml/parser/Makefile.frag
install-data-hook:: XML-XMLParser.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" XML-XMLParser.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/XML-XMLParser.star

-include $(srcdir)/packages/xml/parser/Makefile.frag
all-local: XML-XMLParser.star
all-local: $(srcdir)/packages/xml/saxdriver/stamp-classes
XML-SAXDriver.star: packages/xml/saxdriver/package.xml $(srcdir)/packages/xml/saxdriver/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f XML-SAXDriver.star

dist-hook:: packages/xml/saxdriver/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/xml/saxdriver --dist $<

dist-hook:: $(srcdir)/packages/xml/saxdriver/stamp-classes $(srcdir)/packages/xml/saxdriver/Makefile.frag
	cp -p $(srcdir)/packages/xml/saxdriver/stamp-classes $(distdir)/packages/xml/saxdriver/stamp-classes
	cp -p $(srcdir)/packages/xml/saxdriver/Makefile.frag $(distdir)/packages/xml/saxdriver/Makefile.frag

$(srcdir)/packages/xml/saxdriver/Makefile.frag: packages/xml/saxdriver/package.xml
	(echo 'XML-SAXDriver_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files XML-SAXDriver $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(XML-SAXDriver_FILES):'; \
	echo '$$(srcdir)/packages/xml/saxdriver/stamp-classes: $$(XML-SAXDriver_FILES)'; \
	echo '	touch $$(srcdir)/packages/xml/saxdriver/stamp-classes') > $(srcdir)/packages/xml/saxdriver/Makefile.frag
install-data-hook:: XML-SAXDriver.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" XML-SAXDriver.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/XML-SAXDriver.star

-include $(srcdir)/packages/xml/saxdriver/Makefile.frag
all-local: XML-SAXDriver.star
all-local: $(srcdir)/packages/xml/saxparser/stamp-classes
XML-SAXParser.star: packages/xml/saxparser/package.xml $(srcdir)/packages/xml/saxparser/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f XML-SAXParser.star

dist-hook:: packages/xml/saxparser/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/xml/saxparser --dist $<

dist-hook:: $(srcdir)/packages/xml/saxparser/stamp-classes $(srcdir)/packages/xml/saxparser/Makefile.frag
	cp -p $(srcdir)/packages/xml/saxparser/stamp-classes $(distdir)/packages/xml/saxparser/stamp-classes
	cp -p $(srcdir)/packages/xml/saxparser/Makefile.frag $(distdir)/packages/xml/saxparser/Makefile.frag

$(srcdir)/packages/xml/saxparser/Makefile.frag: packages/xml/saxparser/package.xml
	(echo 'XML-SAXParser_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files XML-SAXParser $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(XML-SAXParser_FILES):'; \
	echo '$$(srcdir)/packages/xml/saxparser/stamp-classes: $$(XML-SAXParser_FILES)'; \
	echo '	touch $$(srcdir)/packages/xml/saxparser/stamp-classes') > $(srcdir)/packages/xml/saxparser/Makefile.frag
install-data-hook:: XML-SAXParser.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" XML-SAXParser.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/XML-SAXParser.star

-include $(srcdir)/packages/xml/saxparser/Makefile.frag
all-local: XML-SAXParser.star
all-local: $(srcdir)/packages/xml/xpath/stamp-classes
XPath.star: packages/xml/xpath/package.xml $(srcdir)/packages/xml/xpath/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f XPath.star

dist-hook:: packages/xml/xpath/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/xml/xpath --dist $<

dist-hook:: $(srcdir)/packages/xml/xpath/stamp-classes $(srcdir)/packages/xml/xpath/Makefile.frag
	cp -p $(srcdir)/packages/xml/xpath/stamp-classes $(distdir)/packages/xml/xpath/stamp-classes
	cp -p $(srcdir)/packages/xml/xpath/Makefile.frag $(distdir)/packages/xml/xpath/Makefile.frag

$(srcdir)/packages/xml/xpath/Makefile.frag: packages/xml/xpath/package.xml
	(echo 'XPath_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files XPath $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(XPath_FILES):'; \
	echo '$$(srcdir)/packages/xml/xpath/stamp-classes: $$(XPath_FILES)'; \
	echo '	touch $$(srcdir)/packages/xml/xpath/stamp-classes') > $(srcdir)/packages/xml/xpath/Makefile.frag
install-data-hook:: XPath.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" XPath.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/XPath.star

-include $(srcdir)/packages/xml/xpath/Makefile.frag
all-local: XPath.star
all-local: $(srcdir)/packages/xml/xsl/stamp-classes
XSL.star: packages/xml/xsl/package.xml $(srcdir)/packages/xml/xsl/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f XSL.star

dist-hook:: packages/xml/xsl/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/xml/xsl --dist $<

dist-hook:: $(srcdir)/packages/xml/xsl/stamp-classes $(srcdir)/packages/xml/xsl/Makefile.frag
	cp -p $(srcdir)/packages/xml/xsl/stamp-classes $(distdir)/packages/xml/xsl/stamp-classes
	cp -p $(srcdir)/packages/xml/xsl/Makefile.frag $(distdir)/packages/xml/xsl/Makefile.frag

$(srcdir)/packages/xml/xsl/Makefile.frag: packages/xml/xsl/package.xml
	(echo 'XSL_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files XSL $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(XSL_FILES):'; \
	echo '$$(srcdir)/packages/xml/xsl/stamp-classes: $$(XSL_FILES)'; \
	echo '	touch $$(srcdir)/packages/xml/xsl/stamp-classes') > $(srcdir)/packages/xml/xsl/Makefile.frag
install-data-hook:: XSL.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" XSL.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/XSL.star

-include $(srcdir)/packages/xml/xsl/Makefile.frag
all-local: XSL.star
all-local: $(srcdir)/packages/zlib/stamp-classes
ZLib.star: packages/zlib/package.xml $(srcdir)/packages/zlib/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	cd packages/zlib && $(MAKE)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f ZLib.star

dist-hook:: packages/zlib/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/zlib --dist $<

dist-hook:: $(srcdir)/packages/zlib/stamp-classes $(srcdir)/packages/zlib/Makefile.frag
	cp -p $(srcdir)/packages/zlib/stamp-classes $(distdir)/packages/zlib/stamp-classes
	cp -p $(srcdir)/packages/zlib/Makefile.frag $(distdir)/packages/zlib/Makefile.frag

$(srcdir)/packages/zlib/Makefile.frag: packages/zlib/package.xml
	(echo 'ZLib_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files ZLib $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(ZLib_FILES):'; \
	echo '$$(srcdir)/packages/zlib/stamp-classes: $$(ZLib_FILES)'; \
	echo '	touch $$(srcdir)/packages/zlib/stamp-classes') > $(srcdir)/packages/zlib/Makefile.frag
install-data-hook:: ZLib.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" ZLib.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/ZLib.star

-include $(srcdir)/packages/zlib/Makefile.frag
all-local: ZLib.star

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
