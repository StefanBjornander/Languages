all-local: $(srcdir)/packages/blox/tk/stamp-classes
BloxTK.star: packages/blox/tk/package.xml $(srcdir)/packages/blox/tk/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	cd packages/blox/tk && $(MAKE)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f BloxTK.star

dist-hook:: packages/blox/tk/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/blox/tk --dist $<

dist-hook:: $(srcdir)/packages/blox/tk/stamp-classes $(srcdir)/packages/blox/tk/Makefile.frag
	cp -p $(srcdir)/packages/blox/tk/stamp-classes $(distdir)/packages/blox/tk/stamp-classes
	cp -p $(srcdir)/packages/blox/tk/Makefile.frag $(distdir)/packages/blox/tk/Makefile.frag

$(srcdir)/packages/blox/tk/Makefile.frag: packages/blox/tk/package.xml
	(echo 'BloxTK_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files BloxTK $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(BloxTK_FILES):'; \
	echo '$$(srcdir)/packages/blox/tk/stamp-classes: $$(BloxTK_FILES)'; \
	echo '	touch $$(srcdir)/packages/blox/tk/stamp-classes') > $(srcdir)/packages/blox/tk/Makefile.frag
all-local: $(srcdir)/packages/blox/browser/stamp-classes
BLOXBrowser.star: packages/blox/browser/package.xml $(srcdir)/packages/blox/browser/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f BLOXBrowser.star

dist-hook:: packages/blox/browser/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/blox/browser --dist $<

dist-hook:: $(srcdir)/packages/blox/browser/stamp-classes $(srcdir)/packages/blox/browser/Makefile.frag
	cp -p $(srcdir)/packages/blox/browser/stamp-classes $(distdir)/packages/blox/browser/stamp-classes
	cp -p $(srcdir)/packages/blox/browser/Makefile.frag $(distdir)/packages/blox/browser/Makefile.frag

$(srcdir)/packages/blox/browser/Makefile.frag: packages/blox/browser/package.xml
	(echo 'BLOXBrowser_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files BLOXBrowser $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(BLOXBrowser_FILES):'; \
	echo '$$(srcdir)/packages/blox/browser/stamp-classes: $$(BLOXBrowser_FILES)'; \
	echo '	touch $$(srcdir)/packages/blox/browser/stamp-classes') > $(srcdir)/packages/blox/browser/Makefile.frag
install-data-hook:: BLOXBrowser.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" BLOXBrowser.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/BLOXBrowser.star

-include $(srcdir)/packages/blox/browser/Makefile.frag
all-local: BLOXBrowser.star
all-local: $(srcdir)/packages/complex/stamp-classes
Complex.star: packages/complex/package.xml $(srcdir)/packages/complex/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f Complex.star

dist-hook:: packages/complex/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/complex --dist $<

dist-hook:: $(srcdir)/packages/complex/stamp-classes $(srcdir)/packages/complex/Makefile.frag
	cp -p $(srcdir)/packages/complex/stamp-classes $(distdir)/packages/complex/stamp-classes
	cp -p $(srcdir)/packages/complex/Makefile.frag $(distdir)/packages/complex/Makefile.frag

$(srcdir)/packages/complex/Makefile.frag: packages/complex/package.xml
	(echo 'Complex_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files Complex $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(Complex_FILES):'; \
	echo '$$(srcdir)/packages/complex/stamp-classes: $$(Complex_FILES)'; \
	echo '	touch $$(srcdir)/packages/complex/stamp-classes') > $(srcdir)/packages/complex/Makefile.frag
install-data-hook:: Complex.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" Complex.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/Complex.star

-include $(srcdir)/packages/complex/Makefile.frag
all-local: Complex.star
all-local: $(srcdir)/packages/continuations/stamp-classes
Continuations.star: packages/continuations/package.xml $(srcdir)/packages/continuations/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f Continuations.star

dist-hook:: packages/continuations/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/continuations --dist $<

dist-hook:: $(srcdir)/packages/continuations/stamp-classes $(srcdir)/packages/continuations/Makefile.frag
	cp -p $(srcdir)/packages/continuations/stamp-classes $(distdir)/packages/continuations/stamp-classes
	cp -p $(srcdir)/packages/continuations/Makefile.frag $(distdir)/packages/continuations/Makefile.frag

$(srcdir)/packages/continuations/Makefile.frag: packages/continuations/package.xml
	(echo 'Continuations_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files Continuations $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(Continuations_FILES):'; \
	echo '$$(srcdir)/packages/continuations/stamp-classes: $$(Continuations_FILES)'; \
	echo '	touch $$(srcdir)/packages/continuations/stamp-classes') > $(srcdir)/packages/continuations/Makefile.frag
install-data-hook:: Continuations.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" Continuations.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/Continuations.star

-include $(srcdir)/packages/continuations/Makefile.frag
all-local: Continuations.star
all-local: $(srcdir)/packages/cpp/stamp-classes
CParser.star: packages/cpp/package.xml $(srcdir)/packages/cpp/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f CParser.star

dist-hook:: packages/cpp/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/cpp --dist $<

dist-hook:: $(srcdir)/packages/cpp/stamp-classes $(srcdir)/packages/cpp/Makefile.frag
	cp -p $(srcdir)/packages/cpp/stamp-classes $(distdir)/packages/cpp/stamp-classes
	cp -p $(srcdir)/packages/cpp/Makefile.frag $(distdir)/packages/cpp/Makefile.frag

$(srcdir)/packages/cpp/Makefile.frag: packages/cpp/package.xml
	(echo 'CParser_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files CParser $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(CParser_FILES):'; \
	echo '$$(srcdir)/packages/cpp/stamp-classes: $$(CParser_FILES)'; \
	echo '	touch $$(srcdir)/packages/cpp/stamp-classes') > $(srcdir)/packages/cpp/Makefile.frag
install-data-hook:: CParser.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" CParser.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/CParser.star

-include $(srcdir)/packages/cpp/Makefile.frag
all-local: CParser.star
all-local: $(srcdir)/packages/debug/stamp-classes
DebugTools.star: packages/debug/package.xml $(srcdir)/packages/debug/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f DebugTools.star

dist-hook:: packages/debug/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/debug --dist $<

dist-hook:: $(srcdir)/packages/debug/stamp-classes $(srcdir)/packages/debug/Makefile.frag
	cp -p $(srcdir)/packages/debug/stamp-classes $(distdir)/packages/debug/stamp-classes
	cp -p $(srcdir)/packages/debug/Makefile.frag $(distdir)/packages/debug/Makefile.frag

$(srcdir)/packages/debug/Makefile.frag: packages/debug/package.xml
	(echo 'DebugTools_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files DebugTools $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(DebugTools_FILES):'; \
	echo '$$(srcdir)/packages/debug/stamp-classes: $$(DebugTools_FILES)'; \
	echo '	touch $$(srcdir)/packages/debug/stamp-classes') > $(srcdir)/packages/debug/Makefile.frag
install-data-hook:: DebugTools.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" DebugTools.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/DebugTools.star

-include $(srcdir)/packages/debug/Makefile.frag
all-local: DebugTools.star
all-local: $(srcdir)/packages/dbd-mysql/stamp-classes
DBD-MySQL.star: packages/dbd-mysql/package.xml $(srcdir)/packages/dbd-mysql/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f DBD-MySQL.star

dist-hook:: packages/dbd-mysql/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/dbd-mysql --dist $<

dist-hook:: $(srcdir)/packages/dbd-mysql/stamp-classes $(srcdir)/packages/dbd-mysql/Makefile.frag
	cp -p $(srcdir)/packages/dbd-mysql/stamp-classes $(distdir)/packages/dbd-mysql/stamp-classes
	cp -p $(srcdir)/packages/dbd-mysql/Makefile.frag $(distdir)/packages/dbd-mysql/Makefile.frag

$(srcdir)/packages/dbd-mysql/Makefile.frag: packages/dbd-mysql/package.xml
	(echo 'DBD-MySQL_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files DBD-MySQL $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(DBD-MySQL_FILES):'; \
	echo '$$(srcdir)/packages/dbd-mysql/stamp-classes: $$(DBD-MySQL_FILES)'; \
	echo '	touch $$(srcdir)/packages/dbd-mysql/stamp-classes') > $(srcdir)/packages/dbd-mysql/Makefile.frag
install-data-hook:: DBD-MySQL.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" DBD-MySQL.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/DBD-MySQL.star

-include $(srcdir)/packages/dbd-mysql/Makefile.frag
all-local: DBD-MySQL.star
all-local: $(srcdir)/packages/dbd-postgresql/stamp-classes
DBD-PostgreSQL.star: packages/dbd-postgresql/package.xml $(srcdir)/packages/dbd-postgresql/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f DBD-PostgreSQL.star

dist-hook:: packages/dbd-postgresql/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/dbd-postgresql --dist $<

dist-hook:: $(srcdir)/packages/dbd-postgresql/stamp-classes $(srcdir)/packages/dbd-postgresql/Makefile.frag
	cp -p $(srcdir)/packages/dbd-postgresql/stamp-classes $(distdir)/packages/dbd-postgresql/stamp-classes
	cp -p $(srcdir)/packages/dbd-postgresql/Makefile.frag $(distdir)/packages/dbd-postgresql/Makefile.frag

$(srcdir)/packages/dbd-postgresql/Makefile.frag: packages/dbd-postgresql/package.xml
	(echo 'DBD-PostgreSQL_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files DBD-PostgreSQL $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(DBD-PostgreSQL_FILES):'; \
	echo '$$(srcdir)/packages/dbd-postgresql/stamp-classes: $$(DBD-PostgreSQL_FILES)'; \
	echo '	touch $$(srcdir)/packages/dbd-postgresql/stamp-classes') > $(srcdir)/packages/dbd-postgresql/Makefile.frag
install-data-hook:: DBD-PostgreSQL.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" DBD-PostgreSQL.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/DBD-PostgreSQL.star

-include $(srcdir)/packages/dbd-postgresql/Makefile.frag
all-local: DBD-PostgreSQL.star
all-local: $(srcdir)/packages/dbd-sqlite/stamp-classes
DBD-SQLite.star: packages/dbd-sqlite/package.xml $(srcdir)/packages/dbd-sqlite/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	cd packages/dbd-sqlite && $(MAKE)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f DBD-SQLite.star

dist-hook:: packages/dbd-sqlite/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/dbd-sqlite --dist $<

dist-hook:: $(srcdir)/packages/dbd-sqlite/stamp-classes $(srcdir)/packages/dbd-sqlite/Makefile.frag
	cp -p $(srcdir)/packages/dbd-sqlite/stamp-classes $(distdir)/packages/dbd-sqlite/stamp-classes
	cp -p $(srcdir)/packages/dbd-sqlite/Makefile.frag $(distdir)/packages/dbd-sqlite/Makefile.frag

$(srcdir)/packages/dbd-sqlite/Makefile.frag: packages/dbd-sqlite/package.xml
	(echo 'DBD-SQLite_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files DBD-SQLite $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(DBD-SQLite_FILES):'; \
	echo '$$(srcdir)/packages/dbd-sqlite/stamp-classes: $$(DBD-SQLite_FILES)'; \
	echo '	touch $$(srcdir)/packages/dbd-sqlite/stamp-classes') > $(srcdir)/packages/dbd-sqlite/Makefile.frag
install-data-hook:: DBD-SQLite.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" DBD-SQLite.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/DBD-SQLite.star

-include $(srcdir)/packages/dbd-sqlite/Makefile.frag
all-local: DBD-SQLite.star
all-local: $(srcdir)/packages/dbi/stamp-classes
DBI.star: packages/dbi/package.xml $(srcdir)/packages/dbi/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f DBI.star

dist-hook:: packages/dbi/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/dbi --dist $<

dist-hook:: $(srcdir)/packages/dbi/stamp-classes $(srcdir)/packages/dbi/Makefile.frag
	cp -p $(srcdir)/packages/dbi/stamp-classes $(distdir)/packages/dbi/stamp-classes
	cp -p $(srcdir)/packages/dbi/Makefile.frag $(distdir)/packages/dbi/Makefile.frag

$(srcdir)/packages/dbi/Makefile.frag: packages/dbi/package.xml
	(echo 'DBI_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files DBI $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(DBI_FILES):'; \
	echo '$$(srcdir)/packages/dbi/stamp-classes: $$(DBI_FILES)'; \
	echo '	touch $$(srcdir)/packages/dbi/stamp-classes') > $(srcdir)/packages/dbi/Makefile.frag
install-data-hook:: DBI.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" DBI.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/DBI.star

-include $(srcdir)/packages/dbi/Makefile.frag
all-local: DBI.star
all-local: $(srcdir)/packages/gdbm/stamp-classes
GDBM.star: packages/gdbm/package.xml $(srcdir)/packages/gdbm/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	cd packages/gdbm && $(MAKE)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f GDBM.star

dist-hook:: packages/gdbm/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/gdbm --dist $<

dist-hook:: $(srcdir)/packages/gdbm/stamp-classes $(srcdir)/packages/gdbm/Makefile.frag
	cp -p $(srcdir)/packages/gdbm/stamp-classes $(distdir)/packages/gdbm/stamp-classes
	cp -p $(srcdir)/packages/gdbm/Makefile.frag $(distdir)/packages/gdbm/Makefile.frag

$(srcdir)/packages/gdbm/Makefile.frag: packages/gdbm/package.xml
	(echo 'GDBM_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files GDBM $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(GDBM_FILES):'; \
	echo '$$(srcdir)/packages/gdbm/stamp-classes: $$(GDBM_FILES)'; \
	echo '	touch $$(srcdir)/packages/gdbm/stamp-classes') > $(srcdir)/packages/gdbm/Makefile.frag
all-local: $(srcdir)/packages/glorp/stamp-classes
Glorp.star: packages/glorp/package.xml $(srcdir)/packages/glorp/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f Glorp.star

dist-hook:: packages/glorp/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/glorp --dist $<

dist-hook:: $(srcdir)/packages/glorp/stamp-classes $(srcdir)/packages/glorp/Makefile.frag
	cp -p $(srcdir)/packages/glorp/stamp-classes $(distdir)/packages/glorp/stamp-classes
	cp -p $(srcdir)/packages/glorp/Makefile.frag $(distdir)/packages/glorp/Makefile.frag

$(srcdir)/packages/glorp/Makefile.frag: packages/glorp/package.xml
	(echo 'Glorp_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files Glorp $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(Glorp_FILES):'; \
	echo '$$(srcdir)/packages/glorp/stamp-classes: $$(Glorp_FILES)'; \
	echo '	touch $$(srcdir)/packages/glorp/stamp-classes') > $(srcdir)/packages/glorp/Makefile.frag
install-data-hook:: Glorp.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" Glorp.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/Glorp.star

-include $(srcdir)/packages/glorp/Makefile.frag
all-local: Glorp.star
all-local: $(srcdir)/packages/cairo/stamp-classes
Cairo.star: packages/cairo/package.xml $(srcdir)/packages/cairo/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f Cairo.star

dist-hook:: packages/cairo/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/cairo --dist $<

dist-hook:: $(srcdir)/packages/cairo/stamp-classes $(srcdir)/packages/cairo/Makefile.frag
	cp -p $(srcdir)/packages/cairo/stamp-classes $(distdir)/packages/cairo/stamp-classes
	cp -p $(srcdir)/packages/cairo/Makefile.frag $(distdir)/packages/cairo/Makefile.frag

$(srcdir)/packages/cairo/Makefile.frag: packages/cairo/package.xml
	(echo 'Cairo_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files Cairo $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(Cairo_FILES):'; \
	echo '$$(srcdir)/packages/cairo/stamp-classes: $$(Cairo_FILES)'; \
	echo '	touch $$(srcdir)/packages/cairo/stamp-classes') > $(srcdir)/packages/cairo/Makefile.frag
all-local: $(srcdir)/packages/gtk/stamp-classes
GTK.star: packages/gtk/package.xml $(srcdir)/packages/gtk/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	cd packages/gtk && $(MAKE)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f GTK.star

dist-hook:: packages/gtk/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/gtk --dist $<

dist-hook:: $(srcdir)/packages/gtk/stamp-classes $(srcdir)/packages/gtk/Makefile.frag
	cp -p $(srcdir)/packages/gtk/stamp-classes $(distdir)/packages/gtk/stamp-classes
	cp -p $(srcdir)/packages/gtk/Makefile.frag $(distdir)/packages/gtk/Makefile.frag

$(srcdir)/packages/gtk/Makefile.frag: packages/gtk/package.xml
	(echo 'GTK_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files GTK $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(GTK_FILES):'; \
	echo '$$(srcdir)/packages/gtk/stamp-classes: $$(GTK_FILES)'; \
	echo '	touch $$(srcdir)/packages/gtk/stamp-classes') > $(srcdir)/packages/gtk/Makefile.frag
all-local: $(srcdir)/packages/blox/gtk/stamp-classes
BloxGTK.star: packages/blox/gtk/package.xml $(srcdir)/packages/blox/gtk/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f BloxGTK.star

dist-hook:: packages/blox/gtk/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/blox/gtk --dist $<

dist-hook:: $(srcdir)/packages/blox/gtk/stamp-classes $(srcdir)/packages/blox/gtk/Makefile.frag
	cp -p $(srcdir)/packages/blox/gtk/stamp-classes $(distdir)/packages/blox/gtk/stamp-classes
	cp -p $(srcdir)/packages/blox/gtk/Makefile.frag $(distdir)/packages/blox/gtk/Makefile.frag

$(srcdir)/packages/blox/gtk/Makefile.frag: packages/blox/gtk/package.xml
	(echo 'BloxGTK_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files BloxGTK $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(BloxGTK_FILES):'; \
	echo '$$(srcdir)/packages/blox/gtk/stamp-classes: $$(BloxGTK_FILES)'; \
	echo '	touch $$(srcdir)/packages/blox/gtk/stamp-classes') > $(srcdir)/packages/blox/gtk/Makefile.frag
all-local: $(srcdir)/packages/blox/tests/stamp-classes
Blox.star: packages/blox/tests/package.xml $(srcdir)/packages/blox/tests/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f Blox.star

dist-hook:: packages/blox/tests/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/blox/tests --dist $<

dist-hook:: $(srcdir)/packages/blox/tests/stamp-classes $(srcdir)/packages/blox/tests/Makefile.frag
	cp -p $(srcdir)/packages/blox/tests/stamp-classes $(distdir)/packages/blox/tests/stamp-classes
	cp -p $(srcdir)/packages/blox/tests/Makefile.frag $(distdir)/packages/blox/tests/Makefile.frag

$(srcdir)/packages/blox/tests/Makefile.frag: $(srcdir)/packages/blox/tests/package.xml.in
	(echo 'Blox_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files Blox $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(Blox_FILES):'; \
	echo '$$(srcdir)/packages/blox/tests/stamp-classes: $$(Blox_FILES)'; \
	echo '	touch $$(srcdir)/packages/blox/tests/stamp-classes') > $(srcdir)/packages/blox/tests/Makefile.frag
all-local: $(srcdir)/packages/httpd/stamp-classes
WebServer.star: packages/httpd/package.xml $(srcdir)/packages/httpd/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f WebServer.star

dist-hook:: packages/httpd/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/httpd --dist $<

dist-hook:: $(srcdir)/packages/httpd/stamp-classes $(srcdir)/packages/httpd/Makefile.frag
	cp -p $(srcdir)/packages/httpd/stamp-classes $(distdir)/packages/httpd/stamp-classes
	cp -p $(srcdir)/packages/httpd/Makefile.frag $(distdir)/packages/httpd/Makefile.frag

$(srcdir)/packages/httpd/Makefile.frag: packages/httpd/package.xml
	(echo 'WebServer_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files WebServer $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(WebServer_FILES):'; \
	echo '$$(srcdir)/packages/httpd/stamp-classes: $$(WebServer_FILES)'; \
	echo '	touch $$(srcdir)/packages/httpd/stamp-classes') > $(srcdir)/packages/httpd/Makefile.frag
install-data-hook:: WebServer.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" WebServer.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/WebServer.star

-include $(srcdir)/packages/httpd/Makefile.frag
all-local: WebServer.star
all-local: $(srcdir)/packages/i18n/stamp-classes
I18N.star: packages/i18n/package.xml $(srcdir)/packages/i18n/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	cd packages/i18n && $(MAKE)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f I18N.star

dist-hook:: packages/i18n/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/i18n --dist $<

dist-hook:: $(srcdir)/packages/i18n/stamp-classes $(srcdir)/packages/i18n/Makefile.frag
	cp -p $(srcdir)/packages/i18n/stamp-classes $(distdir)/packages/i18n/stamp-classes
	cp -p $(srcdir)/packages/i18n/Makefile.frag $(distdir)/packages/i18n/Makefile.frag

$(srcdir)/packages/i18n/Makefile.frag: packages/i18n/package.xml
	(echo 'I18N_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files I18N $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(I18N_FILES):'; \
	echo '$$(srcdir)/packages/i18n/stamp-classes: $$(I18N_FILES)'; \
	echo '	touch $$(srcdir)/packages/i18n/stamp-classes') > $(srcdir)/packages/i18n/Makefile.frag
install-data-hook:: I18N.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" I18N.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/I18N.star

-include $(srcdir)/packages/i18n/Makefile.frag
all-local: I18N.star
all-local: $(srcdir)/packages/iconv/stamp-classes
Iconv.star: packages/iconv/package.xml $(srcdir)/packages/iconv/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	cd packages/iconv && $(MAKE)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f Iconv.star

dist-hook:: packages/iconv/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/iconv --dist $<

dist-hook:: $(srcdir)/packages/iconv/stamp-classes $(srcdir)/packages/iconv/Makefile.frag
	cp -p $(srcdir)/packages/iconv/stamp-classes $(distdir)/packages/iconv/stamp-classes
	cp -p $(srcdir)/packages/iconv/Makefile.frag $(distdir)/packages/iconv/Makefile.frag

$(srcdir)/packages/iconv/Makefile.frag: packages/iconv/package.xml
	(echo 'Iconv_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files Iconv $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(Iconv_FILES):'; \
	echo '$$(srcdir)/packages/iconv/stamp-classes: $$(Iconv_FILES)'; \
	echo '	touch $$(srcdir)/packages/iconv/stamp-classes') > $(srcdir)/packages/iconv/Makefile.frag
install-data-hook:: Iconv.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" Iconv.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/Iconv.star

-include $(srcdir)/packages/iconv/Makefile.frag
all-local: Iconv.star
all-local: $(srcdir)/packages/java/stamp-classes
Java.star: packages/java/package.xml $(srcdir)/packages/java/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f Java.star

dist-hook:: packages/java/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/java --dist $<

dist-hook:: $(srcdir)/packages/java/stamp-classes $(srcdir)/packages/java/Makefile.frag
	cp -p $(srcdir)/packages/java/stamp-classes $(distdir)/packages/java/stamp-classes
	cp -p $(srcdir)/packages/java/Makefile.frag $(distdir)/packages/java/Makefile.frag

$(srcdir)/packages/java/Makefile.frag: packages/java/package.xml
	(echo 'Java_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files Java $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(Java_FILES):'; \
	echo '$$(srcdir)/packages/java/stamp-classes: $$(Java_FILES)'; \
	echo '	touch $$(srcdir)/packages/java/stamp-classes') > $(srcdir)/packages/java/Makefile.frag
install-data-hook:: Java.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" Java.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/Java.star

-include $(srcdir)/packages/java/Makefile.frag
all-local: Java.star
all-local: $(srcdir)/packages/digest/stamp-classes
Digest.star: packages/digest/package.xml $(srcdir)/packages/digest/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	cd packages/digest && $(MAKE)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f Digest.star

dist-hook:: packages/digest/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/digest --dist $<

dist-hook:: $(srcdir)/packages/digest/stamp-classes $(srcdir)/packages/digest/Makefile.frag
	cp -p $(srcdir)/packages/digest/stamp-classes $(distdir)/packages/digest/stamp-classes
	cp -p $(srcdir)/packages/digest/Makefile.frag $(distdir)/packages/digest/Makefile.frag

$(srcdir)/packages/digest/Makefile.frag: packages/digest/package.xml
	(echo 'Digest_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files Digest $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(Digest_FILES):'; \
	echo '$$(srcdir)/packages/digest/stamp-classes: $$(Digest_FILES)'; \
	echo '	touch $$(srcdir)/packages/digest/stamp-classes') > $(srcdir)/packages/digest/Makefile.frag
install-data-hook:: Digest.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" Digest.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/Digest.star

-include $(srcdir)/packages/digest/Makefile.frag
all-local: Digest.star
all-local: $(srcdir)/packages/gnuplot/stamp-classes
GNUPlot.star: packages/gnuplot/package.xml $(srcdir)/packages/gnuplot/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f GNUPlot.star

dist-hook:: packages/gnuplot/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/gnuplot --dist $<

dist-hook:: $(srcdir)/packages/gnuplot/stamp-classes $(srcdir)/packages/gnuplot/Makefile.frag
	cp -p $(srcdir)/packages/gnuplot/stamp-classes $(distdir)/packages/gnuplot/stamp-classes
	cp -p $(srcdir)/packages/gnuplot/Makefile.frag $(distdir)/packages/gnuplot/Makefile.frag

$(srcdir)/packages/gnuplot/Makefile.frag: packages/gnuplot/package.xml
	(echo 'GNUPlot_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files GNUPlot $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(GNUPlot_FILES):'; \
	echo '$$(srcdir)/packages/gnuplot/stamp-classes: $$(GNUPlot_FILES)'; \
	echo '	touch $$(srcdir)/packages/gnuplot/stamp-classes') > $(srcdir)/packages/gnuplot/Makefile.frag
install-data-hook:: GNUPlot.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" GNUPlot.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/GNUPlot.star

-include $(srcdir)/packages/gnuplot/Makefile.frag
all-local: GNUPlot.star
all-local: $(srcdir)/packages/magritte/stamp-classes
Magritte.star: packages/magritte/package.xml $(srcdir)/packages/magritte/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f Magritte.star

dist-hook:: packages/magritte/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/magritte --dist $<

dist-hook:: $(srcdir)/packages/magritte/stamp-classes $(srcdir)/packages/magritte/Makefile.frag
	cp -p $(srcdir)/packages/magritte/stamp-classes $(distdir)/packages/magritte/stamp-classes
	cp -p $(srcdir)/packages/magritte/Makefile.frag $(distdir)/packages/magritte/Makefile.frag

$(srcdir)/packages/magritte/Makefile.frag: packages/magritte/package.xml
	(echo 'Magritte_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files Magritte $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(Magritte_FILES):'; \
	echo '$$(srcdir)/packages/magritte/stamp-classes: $$(Magritte_FILES)'; \
	echo '	touch $$(srcdir)/packages/magritte/stamp-classes') > $(srcdir)/packages/magritte/Makefile.frag
install-data-hook:: Magritte.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" Magritte.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/Magritte.star

-include $(srcdir)/packages/magritte/Makefile.frag
all-local: Magritte.star
all-local: $(srcdir)/packages/seaside/magritte/stamp-classes
Magritte-Seaside.star: packages/seaside/magritte/package.xml $(srcdir)/packages/seaside/magritte/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f Magritte-Seaside.star

dist-hook:: packages/seaside/magritte/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/seaside/magritte --dist $<

dist-hook:: $(srcdir)/packages/seaside/magritte/stamp-classes $(srcdir)/packages/seaside/magritte/Makefile.frag
	cp -p $(srcdir)/packages/seaside/magritte/stamp-classes $(distdir)/packages/seaside/magritte/stamp-classes
	cp -p $(srcdir)/packages/seaside/magritte/Makefile.frag $(distdir)/packages/seaside/magritte/Makefile.frag

$(srcdir)/packages/seaside/magritte/Makefile.frag: packages/seaside/magritte/package.xml
	(echo 'Magritte-Seaside_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files Magritte-Seaside $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(Magritte-Seaside_FILES):'; \
	echo '$$(srcdir)/packages/seaside/magritte/stamp-classes: $$(Magritte-Seaside_FILES)'; \
	echo '	touch $$(srcdir)/packages/seaside/magritte/stamp-classes') > $(srcdir)/packages/seaside/magritte/Makefile.frag
install-data-hook:: Magritte-Seaside.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" Magritte-Seaside.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/Magritte-Seaside.star

-include $(srcdir)/packages/seaside/magritte/Makefile.frag
all-local: Magritte-Seaside.star
all-local: $(srcdir)/packages/ncurses/stamp-classes
NCurses.star: packages/ncurses/package.xml $(srcdir)/packages/ncurses/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f NCurses.star

dist-hook:: packages/ncurses/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/ncurses --dist $<

dist-hook:: $(srcdir)/packages/ncurses/stamp-classes $(srcdir)/packages/ncurses/Makefile.frag
	cp -p $(srcdir)/packages/ncurses/stamp-classes $(distdir)/packages/ncurses/stamp-classes
	cp -p $(srcdir)/packages/ncurses/Makefile.frag $(distdir)/packages/ncurses/Makefile.frag

$(srcdir)/packages/ncurses/Makefile.frag: packages/ncurses/package.xml
	(echo 'NCurses_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files NCurses $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(NCurses_FILES):'; \
	echo '$$(srcdir)/packages/ncurses/stamp-classes: $$(NCurses_FILES)'; \
	echo '	touch $$(srcdir)/packages/ncurses/stamp-classes') > $(srcdir)/packages/ncurses/Makefile.frag
all-local: $(srcdir)/packages/net/stamp-classes
NetClients.star: packages/net/package.xml $(srcdir)/packages/net/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f NetClients.star

dist-hook:: packages/net/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/net --dist $<

dist-hook:: $(srcdir)/packages/net/stamp-classes $(srcdir)/packages/net/Makefile.frag
	cp -p $(srcdir)/packages/net/stamp-classes $(distdir)/packages/net/stamp-classes
	cp -p $(srcdir)/packages/net/Makefile.frag $(distdir)/packages/net/Makefile.frag

$(srcdir)/packages/net/Makefile.frag: packages/net/package.xml
	(echo 'NetClients_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files NetClients $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(NetClients_FILES):'; \
	echo '$$(srcdir)/packages/net/stamp-classes: $$(NetClients_FILES)'; \
	echo '	touch $$(srcdir)/packages/net/stamp-classes') > $(srcdir)/packages/net/Makefile.frag
install-data-hook:: NetClients.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" NetClients.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/NetClients.star

-include $(srcdir)/packages/net/Makefile.frag
all-local: NetClients.star
all-local: $(srcdir)/packages/numerics/stamp-classes
DhbNumericalMethods.star: packages/numerics/package.xml $(srcdir)/packages/numerics/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f DhbNumericalMethods.star

dist-hook:: packages/numerics/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/numerics --dist $<

dist-hook:: $(srcdir)/packages/numerics/stamp-classes $(srcdir)/packages/numerics/Makefile.frag
	cp -p $(srcdir)/packages/numerics/stamp-classes $(distdir)/packages/numerics/stamp-classes
	cp -p $(srcdir)/packages/numerics/Makefile.frag $(distdir)/packages/numerics/Makefile.frag

$(srcdir)/packages/numerics/Makefile.frag: packages/numerics/package.xml
	(echo 'DhbNumericalMethods_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files DhbNumericalMethods $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(DhbNumericalMethods_FILES):'; \
	echo '$$(srcdir)/packages/numerics/stamp-classes: $$(DhbNumericalMethods_FILES)'; \
	echo '	touch $$(srcdir)/packages/numerics/stamp-classes') > $(srcdir)/packages/numerics/Makefile.frag
install-data-hook:: DhbNumericalMethods.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" DhbNumericalMethods.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/DhbNumericalMethods.star

-include $(srcdir)/packages/numerics/Makefile.frag
all-local: DhbNumericalMethods.star
all-local: $(srcdir)/packages/opengl/stamp-classes
OpenGL.star: packages/opengl/package.xml $(srcdir)/packages/opengl/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	cd packages/opengl && $(MAKE)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f OpenGL.star

dist-hook:: packages/opengl/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/opengl --dist $<

dist-hook:: $(srcdir)/packages/opengl/stamp-classes $(srcdir)/packages/opengl/Makefile.frag
	cp -p $(srcdir)/packages/opengl/stamp-classes $(distdir)/packages/opengl/stamp-classes
	cp -p $(srcdir)/packages/opengl/Makefile.frag $(distdir)/packages/opengl/Makefile.frag

$(srcdir)/packages/opengl/Makefile.frag: packages/opengl/package.xml
	(echo 'OpenGL_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files OpenGL $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(OpenGL_FILES):'; \
	echo '$$(srcdir)/packages/opengl/stamp-classes: $$(OpenGL_FILES)'; \
	echo '	touch $$(srcdir)/packages/opengl/stamp-classes') > $(srcdir)/packages/opengl/Makefile.frag
all-local: $(srcdir)/packages/glut/stamp-classes
GLUT.star: packages/glut/package.xml $(srcdir)/packages/glut/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	cd packages/glut && $(MAKE)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f GLUT.star

dist-hook:: packages/glut/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/glut --dist $<

dist-hook:: $(srcdir)/packages/glut/stamp-classes $(srcdir)/packages/glut/Makefile.frag
	cp -p $(srcdir)/packages/glut/stamp-classes $(distdir)/packages/glut/stamp-classes
	cp -p $(srcdir)/packages/glut/Makefile.frag $(distdir)/packages/glut/Makefile.frag

$(srcdir)/packages/glut/Makefile.frag: packages/glut/package.xml
	(echo 'GLUT_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files GLUT $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(GLUT_FILES):'; \
	echo '$$(srcdir)/packages/glut/stamp-classes: $$(GLUT_FILES)'; \
	echo '	touch $$(srcdir)/packages/glut/stamp-classes') > $(srcdir)/packages/glut/Makefile.frag
all-local: $(srcdir)/packages/sdl/libsdl/stamp-classes
LibSDL.star: packages/sdl/libsdl/package.xml $(srcdir)/packages/sdl/libsdl/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	cd packages/sdl/libsdl && $(MAKE)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f LibSDL.star

dist-hook:: packages/sdl/libsdl/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/sdl/libsdl --dist $<

dist-hook:: $(srcdir)/packages/sdl/libsdl/stamp-classes $(srcdir)/packages/sdl/libsdl/Makefile.frag
	cp -p $(srcdir)/packages/sdl/libsdl/stamp-classes $(distdir)/packages/sdl/libsdl/stamp-classes
	cp -p $(srcdir)/packages/sdl/libsdl/Makefile.frag $(distdir)/packages/sdl/libsdl/Makefile.frag

$(srcdir)/packages/sdl/libsdl/Makefile.frag: packages/sdl/libsdl/package.xml
	(echo 'LibSDL_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files LibSDL $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(LibSDL_FILES):'; \
	echo '$$(srcdir)/packages/sdl/libsdl/stamp-classes: $$(LibSDL_FILES)'; \
	echo '	touch $$(srcdir)/packages/sdl/libsdl/stamp-classes') > $(srcdir)/packages/sdl/libsdl/Makefile.frag
all-local: $(srcdir)/packages/sdl/libsdl_gl/stamp-classes
LibSDL_GL.star: packages/sdl/libsdl_gl/package.xml $(srcdir)/packages/sdl/libsdl_gl/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f LibSDL_GL.star

dist-hook:: packages/sdl/libsdl_gl/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/sdl/libsdl_gl --dist $<

dist-hook:: $(srcdir)/packages/sdl/libsdl_gl/stamp-classes $(srcdir)/packages/sdl/libsdl_gl/Makefile.frag
	cp -p $(srcdir)/packages/sdl/libsdl_gl/stamp-classes $(distdir)/packages/sdl/libsdl_gl/stamp-classes
	cp -p $(srcdir)/packages/sdl/libsdl_gl/Makefile.frag $(distdir)/packages/sdl/libsdl_gl/Makefile.frag

$(srcdir)/packages/sdl/libsdl_gl/Makefile.frag: packages/sdl/libsdl_gl/package.xml
	(echo 'LibSDL_GL_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files LibSDL_GL $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(LibSDL_GL_FILES):'; \
	echo '$$(srcdir)/packages/sdl/libsdl_gl/stamp-classes: $$(LibSDL_GL_FILES)'; \
	echo '	touch $$(srcdir)/packages/sdl/libsdl_gl/stamp-classes') > $(srcdir)/packages/sdl/libsdl_gl/Makefile.frag
all-local: $(srcdir)/packages/sdl/cairo/stamp-classes
CairoSDL.star: packages/sdl/cairo/package.xml $(srcdir)/packages/sdl/cairo/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f CairoSDL.star

dist-hook:: packages/sdl/cairo/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/sdl/cairo --dist $<

dist-hook:: $(srcdir)/packages/sdl/cairo/stamp-classes $(srcdir)/packages/sdl/cairo/Makefile.frag
	cp -p $(srcdir)/packages/sdl/cairo/stamp-classes $(distdir)/packages/sdl/cairo/stamp-classes
	cp -p $(srcdir)/packages/sdl/cairo/Makefile.frag $(distdir)/packages/sdl/cairo/Makefile.frag

$(srcdir)/packages/sdl/cairo/Makefile.frag: packages/sdl/cairo/package.xml
	(echo 'CairoSDL_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files CairoSDL $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(CairoSDL_FILES):'; \
	echo '$$(srcdir)/packages/sdl/cairo/stamp-classes: $$(CairoSDL_FILES)'; \
	echo '	touch $$(srcdir)/packages/sdl/cairo/stamp-classes') > $(srcdir)/packages/sdl/cairo/Makefile.frag
all-local: $(srcdir)/packages/sdl/libsdl_image/stamp-classes
LibSDL_image.star: packages/sdl/libsdl_image/package.xml $(srcdir)/packages/sdl/libsdl_image/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f LibSDL_image.star

dist-hook:: packages/sdl/libsdl_image/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/sdl/libsdl_image --dist $<

dist-hook:: $(srcdir)/packages/sdl/libsdl_image/stamp-classes $(srcdir)/packages/sdl/libsdl_image/Makefile.frag
	cp -p $(srcdir)/packages/sdl/libsdl_image/stamp-classes $(distdir)/packages/sdl/libsdl_image/stamp-classes
	cp -p $(srcdir)/packages/sdl/libsdl_image/Makefile.frag $(distdir)/packages/sdl/libsdl_image/Makefile.frag

$(srcdir)/packages/sdl/libsdl_image/Makefile.frag: packages/sdl/libsdl_image/package.xml
	(echo 'LibSDL_image_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files LibSDL_image $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(LibSDL_image_FILES):'; \
	echo '$$(srcdir)/packages/sdl/libsdl_image/stamp-classes: $$(LibSDL_image_FILES)'; \
	echo '	touch $$(srcdir)/packages/sdl/libsdl_image/stamp-classes') > $(srcdir)/packages/sdl/libsdl_image/Makefile.frag
all-local: $(srcdir)/packages/sdl/libsdl_mixer/stamp-classes
LibSDL_mixer.star: packages/sdl/libsdl_mixer/package.xml $(srcdir)/packages/sdl/libsdl_mixer/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f LibSDL_mixer.star

dist-hook:: packages/sdl/libsdl_mixer/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/sdl/libsdl_mixer --dist $<

dist-hook:: $(srcdir)/packages/sdl/libsdl_mixer/stamp-classes $(srcdir)/packages/sdl/libsdl_mixer/Makefile.frag
	cp -p $(srcdir)/packages/sdl/libsdl_mixer/stamp-classes $(distdir)/packages/sdl/libsdl_mixer/stamp-classes
	cp -p $(srcdir)/packages/sdl/libsdl_mixer/Makefile.frag $(distdir)/packages/sdl/libsdl_mixer/Makefile.frag

$(srcdir)/packages/sdl/libsdl_mixer/Makefile.frag: packages/sdl/libsdl_mixer/package.xml
	(echo 'LibSDL_mixer_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files LibSDL_mixer $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(LibSDL_mixer_FILES):'; \
	echo '$$(srcdir)/packages/sdl/libsdl_mixer/stamp-classes: $$(LibSDL_mixer_FILES)'; \
	echo '	touch $$(srcdir)/packages/sdl/libsdl_mixer/stamp-classes') > $(srcdir)/packages/sdl/libsdl_mixer/Makefile.frag
all-local: $(srcdir)/packages/sdl/libsdl_sound/stamp-classes
LibSDL_sound.star: packages/sdl/libsdl_sound/package.xml $(srcdir)/packages/sdl/libsdl_sound/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f LibSDL_sound.star

dist-hook:: packages/sdl/libsdl_sound/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/sdl/libsdl_sound --dist $<

dist-hook:: $(srcdir)/packages/sdl/libsdl_sound/stamp-classes $(srcdir)/packages/sdl/libsdl_sound/Makefile.frag
	cp -p $(srcdir)/packages/sdl/libsdl_sound/stamp-classes $(distdir)/packages/sdl/libsdl_sound/stamp-classes
	cp -p $(srcdir)/packages/sdl/libsdl_sound/Makefile.frag $(distdir)/packages/sdl/libsdl_sound/Makefile.frag

$(srcdir)/packages/sdl/libsdl_sound/Makefile.frag: packages/sdl/libsdl_sound/package.xml
	(echo 'LibSDL_sound_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files LibSDL_sound $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(LibSDL_sound_FILES):'; \
	echo '$$(srcdir)/packages/sdl/libsdl_sound/stamp-classes: $$(LibSDL_sound_FILES)'; \
	echo '	touch $$(srcdir)/packages/sdl/libsdl_sound/stamp-classes') > $(srcdir)/packages/sdl/libsdl_sound/Makefile.frag
all-local: $(srcdir)/packages/sdl/libsdl_ttf/stamp-classes
LibSDL_ttf.star: packages/sdl/libsdl_ttf/package.xml $(srcdir)/packages/sdl/libsdl_ttf/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f LibSDL_ttf.star

dist-hook:: packages/sdl/libsdl_ttf/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/sdl/libsdl_ttf --dist $<

dist-hook:: $(srcdir)/packages/sdl/libsdl_ttf/stamp-classes $(srcdir)/packages/sdl/libsdl_ttf/Makefile.frag
	cp -p $(srcdir)/packages/sdl/libsdl_ttf/stamp-classes $(distdir)/packages/sdl/libsdl_ttf/stamp-classes
	cp -p $(srcdir)/packages/sdl/libsdl_ttf/Makefile.frag $(distdir)/packages/sdl/libsdl_ttf/Makefile.frag

$(srcdir)/packages/sdl/libsdl_ttf/Makefile.frag: packages/sdl/libsdl_ttf/package.xml
	(echo 'LibSDL_ttf_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files LibSDL_ttf $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(LibSDL_ttf_FILES):'; \
	echo '$$(srcdir)/packages/sdl/libsdl_ttf/stamp-classes: $$(LibSDL_ttf_FILES)'; \
	echo '	touch $$(srcdir)/packages/sdl/libsdl_ttf/stamp-classes') > $(srcdir)/packages/sdl/libsdl_ttf/Makefile.frag
all-local: $(srcdir)/packages/stinst/compiler/stamp-classes
Compiler.star: packages/stinst/compiler/package.xml $(srcdir)/packages/stinst/compiler/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f Compiler.star

dist-hook:: packages/stinst/compiler/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/stinst/compiler --dist $<

dist-hook:: $(srcdir)/packages/stinst/compiler/stamp-classes $(srcdir)/packages/stinst/compiler/Makefile.frag
	cp -p $(srcdir)/packages/stinst/compiler/stamp-classes $(distdir)/packages/stinst/compiler/stamp-classes
	cp -p $(srcdir)/packages/stinst/compiler/Makefile.frag $(distdir)/packages/stinst/compiler/Makefile.frag

$(srcdir)/packages/stinst/compiler/Makefile.frag: packages/stinst/compiler/package.xml
	(echo 'Compiler_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files Compiler $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(Compiler_FILES):'; \
	echo '$$(srcdir)/packages/stinst/compiler/stamp-classes: $$(Compiler_FILES)'; \
	echo '	touch $$(srcdir)/packages/stinst/compiler/stamp-classes') > $(srcdir)/packages/stinst/compiler/Makefile.frag
install-data-hook:: Compiler.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" Compiler.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/Compiler.star

-include $(srcdir)/packages/stinst/compiler/Makefile.frag
all-local: Compiler.star
all-local: $(srcdir)/packages/stinst/parser/stamp-classes
Parser.star: packages/stinst/parser/package.xml $(srcdir)/packages/stinst/parser/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f Parser.star

dist-hook:: packages/stinst/parser/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/stinst/parser --dist $<

dist-hook:: $(srcdir)/packages/stinst/parser/stamp-classes $(srcdir)/packages/stinst/parser/Makefile.frag
	cp -p $(srcdir)/packages/stinst/parser/stamp-classes $(distdir)/packages/stinst/parser/stamp-classes
	cp -p $(srcdir)/packages/stinst/parser/Makefile.frag $(distdir)/packages/stinst/parser/Makefile.frag

$(srcdir)/packages/stinst/parser/Makefile.frag: packages/stinst/parser/package.xml
	(echo 'Parser_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files Parser $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(Parser_FILES):'; \
	echo '$$(srcdir)/packages/stinst/parser/stamp-classes: $$(Parser_FILES)'; \
	echo '	touch $$(srcdir)/packages/stinst/parser/stamp-classes') > $(srcdir)/packages/stinst/parser/Makefile.frag
install-data-hook:: Parser.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" Parser.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/Parser.star

-include $(srcdir)/packages/stinst/parser/Makefile.frag
all-local: Parser.star
all-local: $(srcdir)/packages/stinst/doc/stamp-classes
ClassPublisher.star: packages/stinst/doc/package.xml $(srcdir)/packages/stinst/doc/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f ClassPublisher.star

dist-hook:: packages/stinst/doc/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/stinst/doc --dist $<

dist-hook:: $(srcdir)/packages/stinst/doc/stamp-classes $(srcdir)/packages/stinst/doc/Makefile.frag
	cp -p $(srcdir)/packages/stinst/doc/stamp-classes $(distdir)/packages/stinst/doc/stamp-classes
	cp -p $(srcdir)/packages/stinst/doc/Makefile.frag $(distdir)/packages/stinst/doc/Makefile.frag

$(srcdir)/packages/stinst/doc/Makefile.frag: packages/stinst/doc/package.xml
	(echo 'ClassPublisher_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files ClassPublisher $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(ClassPublisher_FILES):'; \
	echo '$$(srcdir)/packages/stinst/doc/stamp-classes: $$(ClassPublisher_FILES)'; \
	echo '	touch $$(srcdir)/packages/stinst/doc/stamp-classes') > $(srcdir)/packages/stinst/doc/Makefile.frag
install-data-hook:: ClassPublisher.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" ClassPublisher.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/ClassPublisher.star

-include $(srcdir)/packages/stinst/doc/Makefile.frag
all-local: ClassPublisher.star
all-local: $(srcdir)/packages/profile/stamp-classes
ProfileTools.star: packages/profile/package.xml $(srcdir)/packages/profile/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f ProfileTools.star

dist-hook:: packages/profile/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/profile --dist $<

dist-hook:: $(srcdir)/packages/profile/stamp-classes $(srcdir)/packages/profile/Makefile.frag
	cp -p $(srcdir)/packages/profile/stamp-classes $(distdir)/packages/profile/stamp-classes
	cp -p $(srcdir)/packages/profile/Makefile.frag $(distdir)/packages/profile/Makefile.frag

$(srcdir)/packages/profile/Makefile.frag: packages/profile/package.xml
	(echo 'ProfileTools_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files ProfileTools $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(ProfileTools_FILES):'; \
	echo '$$(srcdir)/packages/profile/stamp-classes: $$(ProfileTools_FILES)'; \
	echo '	touch $$(srcdir)/packages/profile/stamp-classes') > $(srcdir)/packages/profile/Makefile.frag
install-data-hook:: ProfileTools.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" ProfileTools.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/ProfileTools.star

-include $(srcdir)/packages/profile/Makefile.frag
all-local: ProfileTools.star
all-local: $(srcdir)/packages/roe/stamp-classes
ROE.star: packages/roe/package.xml $(srcdir)/packages/roe/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f ROE.star

dist-hook:: packages/roe/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/roe --dist $<

dist-hook:: $(srcdir)/packages/roe/stamp-classes $(srcdir)/packages/roe/Makefile.frag
	cp -p $(srcdir)/packages/roe/stamp-classes $(distdir)/packages/roe/stamp-classes
	cp -p $(srcdir)/packages/roe/Makefile.frag $(distdir)/packages/roe/Makefile.frag

$(srcdir)/packages/roe/Makefile.frag: packages/roe/package.xml
	(echo 'ROE_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files ROE $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(ROE_FILES):'; \
	echo '$$(srcdir)/packages/roe/stamp-classes: $$(ROE_FILES)'; \
	echo '	touch $$(srcdir)/packages/roe/stamp-classes') > $(srcdir)/packages/roe/Makefile.frag
install-data-hook:: ROE.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" ROE.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/ROE.star

-include $(srcdir)/packages/roe/Makefile.frag
all-local: ROE.star
all-local: $(srcdir)/packages/sandstonedb/stamp-classes
SandstoneDb.star: packages/sandstonedb/package.xml $(srcdir)/packages/sandstonedb/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f SandstoneDb.star

dist-hook:: packages/sandstonedb/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/sandstonedb --dist $<

dist-hook:: $(srcdir)/packages/sandstonedb/stamp-classes $(srcdir)/packages/sandstonedb/Makefile.frag
	cp -p $(srcdir)/packages/sandstonedb/stamp-classes $(distdir)/packages/sandstonedb/stamp-classes
	cp -p $(srcdir)/packages/sandstonedb/Makefile.frag $(distdir)/packages/sandstonedb/Makefile.frag

$(srcdir)/packages/sandstonedb/Makefile.frag: packages/sandstonedb/package.xml
	(echo 'SandstoneDb_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files SandstoneDb $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(SandstoneDb_FILES):'; \
	echo '$$(srcdir)/packages/sandstonedb/stamp-classes: $$(SandstoneDb_FILES)'; \
	echo '	touch $$(srcdir)/packages/sandstonedb/stamp-classes') > $(srcdir)/packages/sandstonedb/Makefile.frag
install-data-hook:: SandstoneDb.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" SandstoneDb.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/SandstoneDb.star

-include $(srcdir)/packages/sandstonedb/Makefile.frag
all-local: SandstoneDb.star
all-local: $(srcdir)/packages/seaside/core/stamp-classes
Seaside-Core.star: packages/seaside/core/package.xml $(srcdir)/packages/seaside/core/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f Seaside-Core.star

dist-hook:: packages/seaside/core/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/seaside/core --dist $<

dist-hook:: $(srcdir)/packages/seaside/core/stamp-classes $(srcdir)/packages/seaside/core/Makefile.frag
	cp -p $(srcdir)/packages/seaside/core/stamp-classes $(distdir)/packages/seaside/core/stamp-classes
	cp -p $(srcdir)/packages/seaside/core/Makefile.frag $(distdir)/packages/seaside/core/Makefile.frag

$(srcdir)/packages/seaside/core/Makefile.frag: packages/seaside/core/package.xml
	(echo 'Seaside-Core_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files Seaside-Core $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(Seaside-Core_FILES):'; \
	echo '$$(srcdir)/packages/seaside/core/stamp-classes: $$(Seaside-Core_FILES)'; \
	echo '	touch $$(srcdir)/packages/seaside/core/stamp-classes') > $(srcdir)/packages/seaside/core/Makefile.frag
install-data-hook:: Seaside-Core.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" Seaside-Core.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/Seaside-Core.star

-include $(srcdir)/packages/seaside/core/Makefile.frag
all-local: Seaside-Core.star
all-local: $(srcdir)/packages/seaside/dev/stamp-classes
Seaside-Development.star: packages/seaside/dev/package.xml $(srcdir)/packages/seaside/dev/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f Seaside-Development.star

dist-hook:: packages/seaside/dev/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/seaside/dev --dist $<

dist-hook:: $(srcdir)/packages/seaside/dev/stamp-classes $(srcdir)/packages/seaside/dev/Makefile.frag
	cp -p $(srcdir)/packages/seaside/dev/stamp-classes $(distdir)/packages/seaside/dev/stamp-classes
	cp -p $(srcdir)/packages/seaside/dev/Makefile.frag $(distdir)/packages/seaside/dev/Makefile.frag

$(srcdir)/packages/seaside/dev/Makefile.frag: packages/seaside/dev/package.xml
	(echo 'Seaside-Development_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files Seaside-Development $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(Seaside-Development_FILES):'; \
	echo '$$(srcdir)/packages/seaside/dev/stamp-classes: $$(Seaside-Development_FILES)'; \
	echo '	touch $$(srcdir)/packages/seaside/dev/stamp-classes') > $(srcdir)/packages/seaside/dev/Makefile.frag
install-data-hook:: Seaside-Development.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" Seaside-Development.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/Seaside-Development.star

-include $(srcdir)/packages/seaside/dev/Makefile.frag
all-local: Seaside-Development.star
all-local: $(srcdir)/packages/seaside/examples/stamp-classes
Seaside-Examples.star: packages/seaside/examples/package.xml $(srcdir)/packages/seaside/examples/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f Seaside-Examples.star

dist-hook:: packages/seaside/examples/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/seaside/examples --dist $<

dist-hook:: $(srcdir)/packages/seaside/examples/stamp-classes $(srcdir)/packages/seaside/examples/Makefile.frag
	cp -p $(srcdir)/packages/seaside/examples/stamp-classes $(distdir)/packages/seaside/examples/stamp-classes
	cp -p $(srcdir)/packages/seaside/examples/Makefile.frag $(distdir)/packages/seaside/examples/Makefile.frag

$(srcdir)/packages/seaside/examples/Makefile.frag: packages/seaside/examples/package.xml
	(echo 'Seaside-Examples_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files Seaside-Examples $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(Seaside-Examples_FILES):'; \
	echo '$$(srcdir)/packages/seaside/examples/stamp-classes: $$(Seaside-Examples_FILES)'; \
	echo '	touch $$(srcdir)/packages/seaside/examples/stamp-classes') > $(srcdir)/packages/seaside/examples/Makefile.frag
install-data-hook:: Seaside-Examples.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" Seaside-Examples.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/Seaside-Examples.star

-include $(srcdir)/packages/seaside/examples/Makefile.frag
all-local: Seaside-Examples.star
all-local: $(srcdir)/packages/seaside/swazoo/stamp-classes
Seaside.star: packages/seaside/swazoo/package.xml $(srcdir)/packages/seaside/swazoo/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f Seaside.star

dist-hook:: packages/seaside/swazoo/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/seaside/swazoo --dist $<

dist-hook:: $(srcdir)/packages/seaside/swazoo/stamp-classes $(srcdir)/packages/seaside/swazoo/Makefile.frag
	cp -p $(srcdir)/packages/seaside/swazoo/stamp-classes $(distdir)/packages/seaside/swazoo/stamp-classes
	cp -p $(srcdir)/packages/seaside/swazoo/Makefile.frag $(distdir)/packages/seaside/swazoo/Makefile.frag

$(srcdir)/packages/seaside/swazoo/Makefile.frag: packages/seaside/swazoo/package.xml
	(echo 'Seaside_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files Seaside $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(Seaside_FILES):'; \
	echo '$$(srcdir)/packages/seaside/swazoo/stamp-classes: $$(Seaside_FILES)'; \
	echo '	touch $$(srcdir)/packages/seaside/swazoo/stamp-classes') > $(srcdir)/packages/seaside/swazoo/Makefile.frag
install-data-hook:: Seaside.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" Seaside.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/Seaside.star

-include $(srcdir)/packages/seaside/swazoo/Makefile.frag
all-local: Seaside.star
all-local: $(srcdir)/packages/sport/stamp-classes
Sport.star: packages/sport/package.xml $(srcdir)/packages/sport/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f Sport.star

dist-hook:: packages/sport/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/sport --dist $<

dist-hook:: $(srcdir)/packages/sport/stamp-classes $(srcdir)/packages/sport/Makefile.frag
	cp -p $(srcdir)/packages/sport/stamp-classes $(distdir)/packages/sport/stamp-classes
	cp -p $(srcdir)/packages/sport/Makefile.frag $(distdir)/packages/sport/Makefile.frag

$(srcdir)/packages/sport/Makefile.frag: packages/sport/package.xml
	(echo 'Sport_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files Sport $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(Sport_FILES):'; \
	echo '$$(srcdir)/packages/sport/stamp-classes: $$(Sport_FILES)'; \
	echo '	touch $$(srcdir)/packages/sport/stamp-classes') > $(srcdir)/packages/sport/Makefile.frag
install-data-hook:: Sport.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" Sport.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/Sport.star

-include $(srcdir)/packages/sport/Makefile.frag
all-local: Sport.star
all-local: $(srcdir)/packages/sunit/stamp-classes
SUnit.star: packages/sunit/package.xml $(srcdir)/packages/sunit/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f SUnit.star

dist-hook:: packages/sunit/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/sunit --dist $<

dist-hook:: $(srcdir)/packages/sunit/stamp-classes $(srcdir)/packages/sunit/Makefile.frag
	cp -p $(srcdir)/packages/sunit/stamp-classes $(distdir)/packages/sunit/stamp-classes
	cp -p $(srcdir)/packages/sunit/Makefile.frag $(distdir)/packages/sunit/Makefile.frag

$(srcdir)/packages/sunit/Makefile.frag: packages/sunit/package.xml
	(echo 'SUnit_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files SUnit $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(SUnit_FILES):'; \
	echo '$$(srcdir)/packages/sunit/stamp-classes: $$(SUnit_FILES)'; \
	echo '	touch $$(srcdir)/packages/sunit/stamp-classes') > $(srcdir)/packages/sunit/Makefile.frag
install-data-hook:: SUnit.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" SUnit.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/SUnit.star

-include $(srcdir)/packages/sunit/Makefile.frag
all-local: SUnit.star
all-local: $(srcdir)/packages/swazoo-httpd/stamp-classes
Swazoo.star: packages/swazoo-httpd/package.xml $(srcdir)/packages/swazoo-httpd/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f Swazoo.star

dist-hook:: packages/swazoo-httpd/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/swazoo-httpd --dist $<

dist-hook:: $(srcdir)/packages/swazoo-httpd/stamp-classes $(srcdir)/packages/swazoo-httpd/Makefile.frag
	cp -p $(srcdir)/packages/swazoo-httpd/stamp-classes $(distdir)/packages/swazoo-httpd/stamp-classes
	cp -p $(srcdir)/packages/swazoo-httpd/Makefile.frag $(distdir)/packages/swazoo-httpd/Makefile.frag

$(srcdir)/packages/swazoo-httpd/Makefile.frag: packages/swazoo-httpd/package.xml
	(echo 'Swazoo_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files Swazoo $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(Swazoo_FILES):'; \
	echo '$$(srcdir)/packages/swazoo-httpd/stamp-classes: $$(Swazoo_FILES)'; \
	echo '	touch $$(srcdir)/packages/swazoo-httpd/stamp-classes') > $(srcdir)/packages/swazoo-httpd/Makefile.frag
install-data-hook:: Swazoo.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" Swazoo.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/Swazoo.star

-include $(srcdir)/packages/swazoo-httpd/Makefile.frag
all-local: Swazoo.star
all-local: $(srcdir)/packages/sockets/stamp-classes
Sockets.star: packages/sockets/package.xml $(srcdir)/packages/sockets/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f Sockets.star

dist-hook:: packages/sockets/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/sockets --dist $<

dist-hook:: $(srcdir)/packages/sockets/stamp-classes $(srcdir)/packages/sockets/Makefile.frag
	cp -p $(srcdir)/packages/sockets/stamp-classes $(distdir)/packages/sockets/stamp-classes
	cp -p $(srcdir)/packages/sockets/Makefile.frag $(distdir)/packages/sockets/Makefile.frag

$(srcdir)/packages/sockets/Makefile.frag: packages/sockets/package.xml
	(echo 'Sockets_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files Sockets $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(Sockets_FILES):'; \
	echo '$$(srcdir)/packages/sockets/stamp-classes: $$(Sockets_FILES)'; \
	echo '	touch $$(srcdir)/packages/sockets/stamp-classes') > $(srcdir)/packages/sockets/Makefile.frag
install-data-hook:: Sockets.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" Sockets.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/Sockets.star

-include $(srcdir)/packages/sockets/Makefile.frag
all-local: Sockets.star
all-local: $(srcdir)/packages/vfs/stamp-classes
VFSAddOns.star: packages/vfs/package.xml $(srcdir)/packages/vfs/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	cd packages/vfs && $(MAKE)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f VFSAddOns.star

dist-hook:: packages/vfs/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/vfs --dist $<

dist-hook:: $(srcdir)/packages/vfs/stamp-classes $(srcdir)/packages/vfs/Makefile.frag
	cp -p $(srcdir)/packages/vfs/stamp-classes $(distdir)/packages/vfs/stamp-classes
	cp -p $(srcdir)/packages/vfs/Makefile.frag $(distdir)/packages/vfs/Makefile.frag

$(srcdir)/packages/vfs/Makefile.frag: packages/vfs/package.xml
	(echo 'VFSAddOns_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files VFSAddOns $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(VFSAddOns_FILES):'; \
	echo '$$(srcdir)/packages/vfs/stamp-classes: $$(VFSAddOns_FILES)'; \
	echo '	touch $$(srcdir)/packages/vfs/stamp-classes') > $(srcdir)/packages/vfs/Makefile.frag
install-data-hook:: VFSAddOns.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" VFSAddOns.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/VFSAddOns.star

-include $(srcdir)/packages/vfs/Makefile.frag
all-local: VFSAddOns.star
all-local: $(srcdir)/packages/visualgst/stamp-classes
VisualGST.star: packages/visualgst/package.xml $(srcdir)/packages/visualgst/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f VisualGST.star

dist-hook:: packages/visualgst/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/visualgst --dist $<

dist-hook:: $(srcdir)/packages/visualgst/stamp-classes $(srcdir)/packages/visualgst/Makefile.frag
	cp -p $(srcdir)/packages/visualgst/stamp-classes $(distdir)/packages/visualgst/stamp-classes
	cp -p $(srcdir)/packages/visualgst/Makefile.frag $(distdir)/packages/visualgst/Makefile.frag

$(srcdir)/packages/visualgst/Makefile.frag: packages/visualgst/package.xml
	(echo 'VisualGST_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files VisualGST $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(VisualGST_FILES):'; \
	echo '$$(srcdir)/packages/visualgst/stamp-classes: $$(VisualGST_FILES)'; \
	echo '	touch $$(srcdir)/packages/visualgst/stamp-classes') > $(srcdir)/packages/visualgst/Makefile.frag
install-data-hook:: VisualGST.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" VisualGST.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/VisualGST.star

-include $(srcdir)/packages/visualgst/Makefile.frag
all-local: VisualGST.star
all-local: $(srcdir)/packages/xml/builder/stamp-classes
XML-XMLNodeBuilder.star: packages/xml/builder/package.xml $(srcdir)/packages/xml/builder/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f XML-XMLNodeBuilder.star

dist-hook:: packages/xml/builder/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/xml/builder --dist $<

dist-hook:: $(srcdir)/packages/xml/builder/stamp-classes $(srcdir)/packages/xml/builder/Makefile.frag
	cp -p $(srcdir)/packages/xml/builder/stamp-classes $(distdir)/packages/xml/builder/stamp-classes
	cp -p $(srcdir)/packages/xml/builder/Makefile.frag $(distdir)/packages/xml/builder/Makefile.frag

$(srcdir)/packages/xml/builder/Makefile.frag: packages/xml/builder/package.xml
	(echo 'XML-XMLNodeBuilder_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files XML-XMLNodeBuilder $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(XML-XMLNodeBuilder_FILES):'; \
	echo '$$(srcdir)/packages/xml/builder/stamp-classes: $$(XML-XMLNodeBuilder_FILES)'; \
	echo '	touch $$(srcdir)/packages/xml/builder/stamp-classes') > $(srcdir)/packages/xml/builder/Makefile.frag
install-data-hook:: XML-XMLNodeBuilder.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" XML-XMLNodeBuilder.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/XML-XMLNodeBuilder.star

-include $(srcdir)/packages/xml/builder/Makefile.frag
all-local: XML-XMLNodeBuilder.star
all-local: $(srcdir)/packages/xml/dom/stamp-classes
XML-DOM.star: packages/xml/dom/package.xml $(srcdir)/packages/xml/dom/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f XML-DOM.star

dist-hook:: packages/xml/dom/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/xml/dom --dist $<

dist-hook:: $(srcdir)/packages/xml/dom/stamp-classes $(srcdir)/packages/xml/dom/Makefile.frag
	cp -p $(srcdir)/packages/xml/dom/stamp-classes $(distdir)/packages/xml/dom/stamp-classes
	cp -p $(srcdir)/packages/xml/dom/Makefile.frag $(distdir)/packages/xml/dom/Makefile.frag

$(srcdir)/packages/xml/dom/Makefile.frag: packages/xml/dom/package.xml
	(echo 'XML-DOM_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files XML-DOM $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(XML-DOM_FILES):'; \
	echo '$$(srcdir)/packages/xml/dom/stamp-classes: $$(XML-DOM_FILES)'; \
	echo '	touch $$(srcdir)/packages/xml/dom/stamp-classes') > $(srcdir)/packages/xml/dom/Makefile.frag
install-data-hook:: XML-DOM.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" XML-DOM.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/XML-DOM.star

-include $(srcdir)/packages/xml/dom/Makefile.frag
all-local: XML-DOM.star
all-local: $(srcdir)/packages/xml/tests/stamp-classes
XML-ParserTests.star: packages/xml/tests/package.xml $(srcdir)/packages/xml/tests/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f XML-ParserTests.star

dist-hook:: packages/xml/tests/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/xml/tests --dist $<

dist-hook:: $(srcdir)/packages/xml/tests/stamp-classes $(srcdir)/packages/xml/tests/Makefile.frag
	cp -p $(srcdir)/packages/xml/tests/stamp-classes $(distdir)/packages/xml/tests/stamp-classes
	cp -p $(srcdir)/packages/xml/tests/Makefile.frag $(distdir)/packages/xml/tests/Makefile.frag

$(srcdir)/packages/xml/tests/Makefile.frag: packages/xml/tests/package.xml
	(echo 'XML-ParserTests_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files XML-ParserTests $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(XML-ParserTests_FILES):'; \
	echo '$$(srcdir)/packages/xml/tests/stamp-classes: $$(XML-ParserTests_FILES)'; \
	echo '	touch $$(srcdir)/packages/xml/tests/stamp-classes') > $(srcdir)/packages/xml/tests/Makefile.frag
install-data-hook:: XML-ParserTests.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" XML-ParserTests.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/XML-ParserTests.star

-include $(srcdir)/packages/xml/tests/Makefile.frag
all-local: XML-ParserTests.star
all-local: $(srcdir)/packages/xml/pullparser/stamp-classes
XML-PullParser.star: packages/xml/pullparser/package.xml $(srcdir)/packages/xml/pullparser/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f XML-PullParser.star

dist-hook:: packages/xml/pullparser/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/xml/pullparser --dist $<

dist-hook:: $(srcdir)/packages/xml/pullparser/stamp-classes $(srcdir)/packages/xml/pullparser/Makefile.frag
	cp -p $(srcdir)/packages/xml/pullparser/stamp-classes $(distdir)/packages/xml/pullparser/stamp-classes
	cp -p $(srcdir)/packages/xml/pullparser/Makefile.frag $(distdir)/packages/xml/pullparser/Makefile.frag

$(srcdir)/packages/xml/pullparser/Makefile.frag: packages/xml/pullparser/package.xml
	(echo 'XML-PullParser_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files XML-PullParser $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(XML-PullParser_FILES):'; \
	echo '$$(srcdir)/packages/xml/pullparser/stamp-classes: $$(XML-PullParser_FILES)'; \
	echo '	touch $$(srcdir)/packages/xml/pullparser/stamp-classes') > $(srcdir)/packages/xml/pullparser/Makefile.frag
install-data-hook:: XML-PullParser.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" XML-PullParser.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/XML-PullParser.star

-include $(srcdir)/packages/xml/pullparser/Makefile.frag
all-local: XML-PullParser.star
all-local: $(srcdir)/packages/xml/expat/stamp-classes
XML-Expat.star: packages/xml/expat/package.xml $(srcdir)/packages/xml/expat/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	cd packages/xml/expat && $(MAKE)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f XML-Expat.star

dist-hook:: packages/xml/expat/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/xml/expat --dist $<

dist-hook:: $(srcdir)/packages/xml/expat/stamp-classes $(srcdir)/packages/xml/expat/Makefile.frag
	cp -p $(srcdir)/packages/xml/expat/stamp-classes $(distdir)/packages/xml/expat/stamp-classes
	cp -p $(srcdir)/packages/xml/expat/Makefile.frag $(distdir)/packages/xml/expat/Makefile.frag

$(srcdir)/packages/xml/expat/Makefile.frag: packages/xml/expat/package.xml
	(echo 'XML-Expat_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files XML-Expat $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(XML-Expat_FILES):'; \
	echo '$$(srcdir)/packages/xml/expat/stamp-classes: $$(XML-Expat_FILES)'; \
	echo '	touch $$(srcdir)/packages/xml/expat/stamp-classes') > $(srcdir)/packages/xml/expat/Makefile.frag
install-data-hook:: XML-Expat.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" XML-Expat.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/XML-Expat.star

-include $(srcdir)/packages/xml/expat/Makefile.frag
all-local: XML-Expat.star
all-local: $(srcdir)/packages/xml/parser/stamp-classes
XML-XMLParser.star: packages/xml/parser/package.xml $(srcdir)/packages/xml/parser/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f XML-XMLParser.star

dist-hook:: packages/xml/parser/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/xml/parser --dist $<

dist-hook:: $(srcdir)/packages/xml/parser/stamp-classes $(srcdir)/packages/xml/parser/Makefile.frag
	cp -p $(srcdir)/packages/xml/parser/stamp-classes $(distdir)/packages/xml/parser/stamp-classes
	cp -p $(srcdir)/packages/xml/parser/Makefile.frag $(distdir)/packages/xml/parser/Makefile.frag

$(srcdir)/packages/xml/parser/Makefile.frag: packages/xml/parser/package.xml
	(echo 'XML-XMLParser_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files XML-XMLParser $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(XML-XMLParser_FILES):'; \
	echo '$$(srcdir)/packages/xml/parser/stamp-classes: $$(XML-XMLParser_FILES)'; \
	echo '	touch $$(srcdir)/packages/xml/parser/stamp-classes') > $(srcdir)/packages/xml/parser/Makefile.frag
install-data-hook:: XML-XMLParser.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" XML-XMLParser.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/XML-XMLParser.star

-include $(srcdir)/packages/xml/parser/Makefile.frag
all-local: XML-XMLParser.star
all-local: $(srcdir)/packages/xml/saxdriver/stamp-classes
XML-SAXDriver.star: packages/xml/saxdriver/package.xml $(srcdir)/packages/xml/saxdriver/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f XML-SAXDriver.star

dist-hook:: packages/xml/saxdriver/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/xml/saxdriver --dist $<

dist-hook:: $(srcdir)/packages/xml/saxdriver/stamp-classes $(srcdir)/packages/xml/saxdriver/Makefile.frag
	cp -p $(srcdir)/packages/xml/saxdriver/stamp-classes $(distdir)/packages/xml/saxdriver/stamp-classes
	cp -p $(srcdir)/packages/xml/saxdriver/Makefile.frag $(distdir)/packages/xml/saxdriver/Makefile.frag

$(srcdir)/packages/xml/saxdriver/Makefile.frag: packages/xml/saxdriver/package.xml
	(echo 'XML-SAXDriver_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files XML-SAXDriver $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(XML-SAXDriver_FILES):'; \
	echo '$$(srcdir)/packages/xml/saxdriver/stamp-classes: $$(XML-SAXDriver_FILES)'; \
	echo '	touch $$(srcdir)/packages/xml/saxdriver/stamp-classes') > $(srcdir)/packages/xml/saxdriver/Makefile.frag
install-data-hook:: XML-SAXDriver.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" XML-SAXDriver.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/XML-SAXDriver.star

-include $(srcdir)/packages/xml/saxdriver/Makefile.frag
all-local: XML-SAXDriver.star
all-local: $(srcdir)/packages/xml/saxparser/stamp-classes
XML-SAXParser.star: packages/xml/saxparser/package.xml $(srcdir)/packages/xml/saxparser/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f XML-SAXParser.star

dist-hook:: packages/xml/saxparser/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/xml/saxparser --dist $<

dist-hook:: $(srcdir)/packages/xml/saxparser/stamp-classes $(srcdir)/packages/xml/saxparser/Makefile.frag
	cp -p $(srcdir)/packages/xml/saxparser/stamp-classes $(distdir)/packages/xml/saxparser/stamp-classes
	cp -p $(srcdir)/packages/xml/saxparser/Makefile.frag $(distdir)/packages/xml/saxparser/Makefile.frag

$(srcdir)/packages/xml/saxparser/Makefile.frag: packages/xml/saxparser/package.xml
	(echo 'XML-SAXParser_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files XML-SAXParser $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(XML-SAXParser_FILES):'; \
	echo '$$(srcdir)/packages/xml/saxparser/stamp-classes: $$(XML-SAXParser_FILES)'; \
	echo '	touch $$(srcdir)/packages/xml/saxparser/stamp-classes') > $(srcdir)/packages/xml/saxparser/Makefile.frag
install-data-hook:: XML-SAXParser.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" XML-SAXParser.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/XML-SAXParser.star

-include $(srcdir)/packages/xml/saxparser/Makefile.frag
all-local: XML-SAXParser.star
all-local: $(srcdir)/packages/xml/xpath/stamp-classes
XPath.star: packages/xml/xpath/package.xml $(srcdir)/packages/xml/xpath/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f XPath.star

dist-hook:: packages/xml/xpath/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/xml/xpath --dist $<

dist-hook:: $(srcdir)/packages/xml/xpath/stamp-classes $(srcdir)/packages/xml/xpath/Makefile.frag
	cp -p $(srcdir)/packages/xml/xpath/stamp-classes $(distdir)/packages/xml/xpath/stamp-classes
	cp -p $(srcdir)/packages/xml/xpath/Makefile.frag $(distdir)/packages/xml/xpath/Makefile.frag

$(srcdir)/packages/xml/xpath/Makefile.frag: packages/xml/xpath/package.xml
	(echo 'XPath_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files XPath $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(XPath_FILES):'; \
	echo '$$(srcdir)/packages/xml/xpath/stamp-classes: $$(XPath_FILES)'; \
	echo '	touch $$(srcdir)/packages/xml/xpath/stamp-classes') > $(srcdir)/packages/xml/xpath/Makefile.frag
install-data-hook:: XPath.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" XPath.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/XPath.star

-include $(srcdir)/packages/xml/xpath/Makefile.frag
all-local: XPath.star
all-local: $(srcdir)/packages/xml/xsl/stamp-classes
XSL.star: packages/xml/xsl/package.xml $(srcdir)/packages/xml/xsl/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f XSL.star

dist-hook:: packages/xml/xsl/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/xml/xsl --dist $<

dist-hook:: $(srcdir)/packages/xml/xsl/stamp-classes $(srcdir)/packages/xml/xsl/Makefile.frag
	cp -p $(srcdir)/packages/xml/xsl/stamp-classes $(distdir)/packages/xml/xsl/stamp-classes
	cp -p $(srcdir)/packages/xml/xsl/Makefile.frag $(distdir)/packages/xml/xsl/Makefile.frag

$(srcdir)/packages/xml/xsl/Makefile.frag: packages/xml/xsl/package.xml
	(echo 'XSL_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files XSL $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(XSL_FILES):'; \
	echo '$$(srcdir)/packages/xml/xsl/stamp-classes: $$(XSL_FILES)'; \
	echo '	touch $$(srcdir)/packages/xml/xsl/stamp-classes') > $(srcdir)/packages/xml/xsl/Makefile.frag
install-data-hook:: XSL.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" XSL.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/XSL.star

-include $(srcdir)/packages/xml/xsl/Makefile.frag
all-local: XSL.star
all-local: $(srcdir)/packages/zlib/stamp-classes
ZLib.star: packages/zlib/package.xml $(srcdir)/packages/zlib/stamp-classes gst-tool$(EXEEXT) gst.im $(WINEWRAPPERDEP)
	cd packages/zlib && $(MAKE)
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=. $<

clean-local::
	-rm -f ZLib.star

dist-hook:: packages/zlib/package.xml
	$(GST_PACKAGE) --srcdir=$(srcdir) --target-directory=$(distdir)/packages/zlib --dist $<

dist-hook:: $(srcdir)/packages/zlib/stamp-classes $(srcdir)/packages/zlib/Makefile.frag
	cp -p $(srcdir)/packages/zlib/stamp-classes $(distdir)/packages/zlib/stamp-classes
	cp -p $(srcdir)/packages/zlib/Makefile.frag $(distdir)/packages/zlib/Makefile.frag

$(srcdir)/packages/zlib/Makefile.frag: packages/zlib/package.xml
	(echo 'ZLib_FILES = \'; \
	  $(GST_PACKAGE) --srcdir=$(srcdir) --vpath --list-files ZLib $< | \
	    tr -d \\r | tr \\n " "; \
	echo; \
	echo '$$(ZLib_FILES):'; \
	echo '$$(srcdir)/packages/zlib/stamp-classes: $$(ZLib_FILES)'; \
	echo '	touch $$(srcdir)/packages/zlib/stamp-classes') > $(srcdir)/packages/zlib/Makefile.frag
install-data-hook:: ZLib.star
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" ZLib.star

uninstall-local::
	$(GST_PACKAGE) --srcdir $(srcdir) --target-directory=$(gstdatadir) --destdir "$(DESTDIR)" --uninstall $(DESTDIR)$(gstdatadir)/ZLib.star

-include $(srcdir)/packages/zlib/Makefile.frag
all-local: ZLib.star
